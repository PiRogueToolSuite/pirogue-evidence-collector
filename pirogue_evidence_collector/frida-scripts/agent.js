ðŸ“¦
587 /pirogue_evidence_collector/frida-scripts-src/agent.js
1608 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/android/android_agent.js
547 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/android/android_java_tls_libs.js
2098 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/android/bouncycastle.js
2243 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/android/conscrypt.js
767 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/android/gnutls_android.js
506 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/android/mbedTLS_android.js
789 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/android/nss_android.js
1020 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/android/openssl_boringssl_android.js
1788 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/android/wolfssl_android.js
1052 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/ios/ios_agent.js
1325 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/ios/openssl_boringssl_ios.js
765 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/linux/gnutls_linux.js
1434 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/linux/linux_agent.js
510 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/linux/matrixssl_linux.js
496 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/linux/mbedTLS_linux.js
2342 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/linux/nss_linux.js
990 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/linux/openssl_boringssl_linux.js
1782 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/linux/wolfssl_linux.js
1064 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/macos/macos_agent.js
1042 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/macos/openssl_boringssl_macos.js
3957 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/shared/shared_functions.js
130 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/shared/shared_structures.js
4050 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/ssl_lib/gnutls.js
1830 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/ssl_lib/java_ssl_libs.js
3412 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/ssl_lib/matrixssl.js
3685 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/ssl_lib/mbedTLS.js
16324 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/ssl_lib/nss.js
5171 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/ssl_lib/openssl_boringssl.js
2839 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/ssl_lib/wolfssl.js
1374 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/ssl_log.js
7803 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/util/anti_root.js
157 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/util/log.js
770 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/util/process_infos.js
498 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/windows/gnutls_windows.js
543 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/windows/matrixssl_windows.js
506 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/windows/mbedTLS_windows.js
689 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/windows/nss_windows.js
710 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/windows/openssl_boringssl_windows.js
6722 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/windows/sspi.js
1554 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/windows/windows_agent.js
788 /pirogue_evidence_collector/frida-scripts-src/friTap/agent/windows/wolfssl_windows.js
992 /pirogue_evidence_collector/frida-scripts-src/pirogue/dynamic_hook_injector.js
411 /pirogue_evidence_collector/frida-scripts-src/pirogue/log_ad_ids.js
2561 /pirogue_evidence_collector/frida-scripts-src/pirogue/log_aes_info.js
1132 /pirogue_evidence_collector/frida-scripts-src/pirogue/log_socket_operations.js
6612 /pirogue_evidence_collector/frida-scripts-src/pirogue/no_root.js
âœ„
import"./friTap/agent/ssl_log.js";import{log_ad_ids as o}from"./pirogue/log_ad_ids.js";import{log_aes_info as r}from"./pirogue/log_aes_info.js";import{socket_trace as p}from"./pirogue/log_socket_operations.js";import{no_root as s}from"./pirogue/no_root.js";import{inject_hooks as e}from"./pirogue/dynamic_hook_injector.js";rpc.exports.logAdIds=o,rpc.exports.log_ad_ids=o,rpc.exports.logAesInfo=r,rpc.exports.log_aes_info=r,rpc.exports.socketTrace=p,rpc.exports.socket_trace=p,rpc.exports.noRoot=s,rpc.exports.no_root=s,rpc.exports.injectDynamicHooks=e,rpc.exports.inject_dynamic_hooks=e;
âœ„
import{module_library_mapping as o}from"../shared/shared_structures.js";import{getModuleNames as r,ssl_library_loader as e,invokeHookingFunction as d}from"../shared/shared_functions.js";import{log as s,devlog as i}from"../util/log.js";import{gnutls_execute as n}from"./gnutls_android.js";import{wolfssl_execute as t}from"./wolfssl_android.js";import{nss_execute as l}from"./nss_android.js";import{mbedTLS_execute as a}from"./mbedTLS_android.js";import{boring_execute as m}from"./openssl_boringssl_android.js";import{java_execute as f}from"./android_java_tls_libs.js";var u=r();global.addresses={};export const socket_library="libc";export function load_android_hooking_agent(){o.linux=[[/.*libssl_sb.so/,d(m)],[/.*libssl\.so/,d(m)],[/.*libgnutls\.so/,d(n)],[/.*libwolfssl\.so/,d(t)],[/.*libnspr[0-9]?\.so/,d(l)],[/libmbedtls\.so.*/,d(a)]],f(),function(o,r){e("linux",o,u,"Android",r)}(o,!0),function(o,r){try{const i=/.*libdl.*\.so/,n=u.find((o=>o.match(i)));if(void 0===n)throw"Android Dynamic loader not found!";let t=Process.getModuleByName(n).enumerateExports();var e="dlopen";for(var d of t)if("android_dlopen_ext"===d.name){e="android_dlopen_ext";break}Interceptor.attach(Module.getExportByName(n,e),{onEnter:function(o){this.moduleName=o[0].readCString()},onLeave:function(e){if(null!=this.moduleName)for(let e of o.linux){let o=e[0],d=e[1];o.test(this.moduleName)&&(s(`${this.moduleName} was loaded & will be hooked on Android!`),d(this.moduleName,r))}}}),console.log("[*] Android dynamic loader hooked.")}catch(o){i("Loader error: "+o),s("No dynamic loader present for hooking on Android.")}}(o,!1)}
âœ„
import{log as o}from"../util/log.js";import{execute as a}from"./bouncycastle.js";import{SSL_Java as e}from"../ssl_lib/java_ssl_libs.js";export class SSL_Java_Android extends e{install_java_android_hooks(){Java.available&&setTimeout((function(){Java.perform((function(){try{Java.use("org.spongycastle.jsse.provider.ProvSSLSocketDirect");o("Bouncycastle/Spongycastle detected."),a()}catch(o){}}))}),0)}execute_hooks(){this.install_java_android_hooks(),this.install_java_hooks()}}export function java_execute(){(new SSL_Java_Android).execute_hooks()}
âœ„
import{log as t}from"../util/log.js";import{byteArrayToString as e,byteArrayToNumber as s,getAttribute as a,reflectionByteArrayToString as r}from"../shared/shared_functions.js";export function execute(){setTimeout((function(){Java.perform((function(){Java.use("org.spongycastle.jsse.provider.ProvSSLSocketDirect$AppDataOutput").write.overload("[B","int","int").implementation=function(t,a,r){for(var i=[],o=0;o<r;++o)i.push(255&t[o]);var n={contentType:"datalog"};n.src_port=this.this$0.value.getLocalPort(),n.dst_port=this.this$0.value.getPort();var d=this.this$0.value.getLocalAddress().getAddress(),l=this.this$0.value.getInetAddress().getAddress();return 4==d.length?(n.src_addr=s(d),n.dst_addr=s(l),n.ss_family="AF_INET"):(n.src_addr=e(d),n.dst_addr=e(l),n.ss_family="AF_INET6"),n.ssl_session_id=e(this.this$0.value.getConnection().getSession().getId()),n.function="writeApplicationData",send(n,i),this.write(t,a,r)},Java.use("org.spongycastle.jsse.provider.ProvSSLSocketDirect$AppDataInput").read.overload("[B","int","int").implementation=function(a,r,i){for(var o=this.read(a,r,i),n=[],d=0;d<o;++d)n.push(255&a[d]);var l={contentType:"datalog",ss_family:"AF_INET"};l.src_port=this.this$0.value.getPort(),l.dst_port=this.this$0.value.getLocalPort();var c=this.this$0.value.getLocalAddress().getAddress(),u=this.this$0.value.getInetAddress().getAddress();return 4==c.length?(l.src_addr=s(u),l.dst_addr=s(c),l.ss_family="AF_INET"):(l.src_addr=e(u),l.dst_addr=e(c),l.ss_family="AF_INET6"),l.ssl_session_id=e(this.this$0.value.getConnection().getSession().getId()),t(l.ssl_session_id),l.function="readApplicationData",send(l,n),o},Java.use("org.spongycastle.jsse.provider.ProvSSLSocketDirect").notifyHandshakeComplete.implementation=function(t){var s=this.protocol.value.securityParameters.value,i=s.clientRandom.value,o=a(s,"masterSecret"),n=Java.use("java.lang.Class"),d=Java.cast(o.getClass(),n).getSuperclass().getDeclaredField("data");d.setAccessible(!0);var l=d.get(o),c={contentType:"keylog"};return c.keylog="CLIENT_RANDOM "+e(i)+" "+r(l),send(c),this.notifyHandshakeComplete(t)}}))}),0)}
âœ„
import{devlog as r,log as e}from"../util/log.js";import{getAndroidVersion as l}from"../util/process_infos.js";function n(e,n){var o=null,a=Java.enumerateClassLoadersSync();for(var i of a)try{o=Java.ClassFactory.get(i).use("com.google.android.gms.common.security.ProviderInstallerImpl");break}catch(e){r("Error in hooking ProviderInstallerImpl (findProviderInstallerImplFromClassloaders):"),r("[-] Error message: "+e),o=null}return l()<=12&&(e.loadClass.overload("java.lang.String").implementation=n),o}export function execute(){Java.perform((function(){var o=Java.use("java.lang.ClassLoader"),a=o.loadClass.overload("java.lang.String").implementation;o.loadClass.overload("java.lang.String").implementation=function(r){let l=this.loadClass(r);if(r.endsWith("ProviderInstallerImpl")){e("Process is loading ProviderInstallerImpl");var i=n(o,a);null===i?e("ProviderInstallerImpl could not be found, although it has been loaded"):i.insertProvider.implementation=function(){e("ProviderinstallerImpl redirection/blocking")}}return l};try{var i=Java.use("com.google.android.gms.security.ProviderInstaller");i.installIfNeeded.implementation=function(r){e("Providerinstaller redirection/blocking")},i.installIfNeededAsync.implementation=function(r,l){e("ProviderinstallerAsncy redirection/blocking"),l.onProviderInstalled()}}catch(i){try{var t=null,s=function(e,n){var o=null,a=Java.enumerateClassLoadersSync();for(var i of a)try{o=Java.ClassFactory.get(i).use("com.google.android.gms.security.ProviderInstaller");break}catch(e){r("Error in hooking ProviderInstallerImpl (findProviderInstallerFromClassloaders):"),r("[-] Error message: "+e),o=null}return l()<=12&&(e.loadClass.overload("java.lang.String").implementation=n),o}(o,a);null===s&&(t=n(o,a)),null===s&&null===t||void 0===s?e("ProviderInstaller could not be found, although it has been loaded"):null!==t?t.insertProvider.implementation=function(){e("ProviderinstallerImpl redirection/blocking")}:(s.installIfNeeded.implementation=function(r){e("Providerinstaller redirection/blocking")},s.installIfNeededAsync.implementation=function(r,l){e("ProviderinstallerAsync redirection/blocking"),l.onProviderInstalled()})}catch(r){e("Some error in hooking the Providerinstaller"),console.log(r)}}}))}
âœ„
import{GnuTLS as s}from"../ssl_lib/gnutls.js";import{socket_library as t}from"./android_agent.js";export class GnuTLS_Linux extends s{constructor(s,t,e){super(s,t),this.moduleName=s,this.socket_library=t}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook(),this.install_tls_keys_callback_hook()}install_tls_keys_callback_hook(){Interceptor.attach(this.addresses[this.module_name].gnutls_init,{onEnter:function(s){this.session=s[0]},onLeave:function(t){console.log(this.session),s.gnutls_session_set_keylog_function(this.session.readPointer(),s.keylog_callback)}})}}export function gnutls_execute(s,e){var o=new GnuTLS_Linux(s,t,e);if(o.execute_hooks(),e){const t=o.addresses[s];Object.keys(t).length>0&&(global.init_addresses[s]=t)}}
âœ„
import{mbed_TLS as e}from"../ssl_lib/mbedTLS.js";import{socket_library as t}from"./android_agent.js";export class mbed_TLS_Android extends e{constructor(e,t,s){super(e,t),this.moduleName=e,this.socket_library=t}install_tls_keys_callback_hook(){}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook()}}export function mbedTLS_execute(e,s){var o=new mbed_TLS_Android(e,t,s);if(o.execute_hooks(),s){const t=o.addresses[e];Object.keys(t).length>0&&(global.init_addresses[e]=t)}}
âœ„
import{NSS as e}from"../ssl_lib/nss.js";import{socket_library as t}from"./android_agent.js";export class NSS_Android extends e{constructor(e,t,s){var o={};o[`*${e}*`]=["PR_Write","PR_Read","PR_FileDesc2NativeHandle","PR_GetPeerName","PR_GetSockName","PR_GetNameForIdentity","PR_GetDescType"],o["*libnss*"]=["PK11_ExtractKeyValue","PK11_GetKeyData"],o["*libssl*.so"]=["SSL_ImportFD","SSL_GetSessionID","SSL_HandshakeCallback"],o[`*${t}*`]=["getpeername","getsockname","ntohs","ntohl"],super(e,t,o),this.moduleName=e,this.socket_library=t}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook()}}export function nss_execute(e,s){var o=new NSS_Android(e,t,s);if(o.execute_hooks(),s){const t=o.addresses[e];Object.keys(t).length>0&&(global.init_addresses[e]=t)}}
âœ„
import{OpenSSL_BoringSSL as e}from"../ssl_lib/openssl_boringssl.js";import{socket_library as t}from"./android_agent.js";export class OpenSSL_BoringSSL_Android extends e{constructor(e,t,s){super(e,t,s),this.moduleName=e,this.socket_library=t}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook(),this.install_tls_keys_callback_hook()}install_tls_keys_callback_hook(){this.SSL_CTX_set_keylog_callback=new NativeFunction(this.addresses[this.module_name].SSL_CTX_set_keylog_callback,"void",["pointer","pointer"]);var t=this;Interceptor.attach(this.addresses[this.module_name].SSL_new,{onEnter:function(s){t.SSL_CTX_set_keylog_callback(s[0],e.keylog_callback)}}),Interceptor.attach(this.addresses[this.module_name].SSL_do_handshake,{onEnter:function(s){t.SSL_CTX_set_keylog_callback(s[0],e.keylog_callback)}})}}export function boring_execute(e,s){var o=new OpenSSL_BoringSSL_Android(e,t,s);if(o.execute_hooks(),s){const t=o.addresses[e];Object.keys(t).length>0&&(global.init_addresses[e]=t)}}
âœ„
import{WolfSSL as e}from"../ssl_lib/wolfssl.js";import{socket_library as s}from"./android_agent.js";import{toHexString as t}from"../shared/shared_functions.js";export class WolfSSL_Android extends e{constructor(e,s,t){super(e,s),this.moduleName=e,this.socket_library=s}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook(),this.install_tls_keys_callback_hook()}install_tls_keys_callback_hook(){e.wolfSSL_get_client_random=new NativeFunction(this.addresses[this.module_name].wolfSSL_get_client_random,"int",["pointer","pointer","int"]),e.wolfSSL_get_server_random=new NativeFunction(this.addresses[this.module_name].wolfSSL_get_server_random,"int",["pointer","pointer","int"]),e.wolfSSL_SESSION_get_master_key=new NativeFunction(this.addresses[this.module_name].wolfSSL_SESSION_get_master_key,"int",["pointer","pointer","int"]),Interceptor.attach(this.addresses[this.module_name].wolfSSL_connect,{onEnter:function(e){this.ssl=e[0]},onLeave:function(s){this.session=e.wolfSSL_get_session(this.ssl);var o="",n=e.wolfSSL_get_client_random(this.session,NULL,0),r=Memory.alloc(n);e.wolfSSL_get_client_random(this.ssl,r,n);var _=r.readByteArray(n);o=`${o}CLIENT_RANDOM: ${t(_)}\n`;var i=e.wolfSSL_get_server_random(this.session,NULL,0),a=Memory.alloc(i);e.wolfSSL_get_server_random(this.ssl,a,i);var l=a.readByteArray(i);o=`${o}SERVER_RANDOM: ${t(l)}\n`;var S=e.wolfSSL_SESSION_get_master_key(this.session,NULL,0),d=Memory.alloc(S);e.wolfSSL_SESSION_get_master_key(this.session,d,S);var c=d.readByteArray(S);o=`${o}MASTER_KEY: ${t(c)}\n`;var h={contentType:"keylog"};h.keylog=o,send(h)}})}}export function wolfssl_execute(e,t){var o=new WolfSSL_Android(e,s,t);if(o.execute_hooks(),t){const s=o.addresses[e];Object.keys(s).length>0&&(global.init_addresses[e]=s)}}
âœ„
import{module_library_mapping as o}from"../shared/shared_structures.js";import{log as e,devlog as i}from"../util/log.js";import{getModuleNames as t,ssl_library_loader as r,invokeHookingFunction as n}from"../shared/shared_functions.js";import{boring_execute as a}from"./openssl_boringssl_ios.js";var s=t();export const socket_library="libSystem.B.dylib";export function load_ios_hooking_agent(){o.darwin=[[/.*libboringssl\.dylib/,n(a)]],function(o,e){r("darwin",o,s,"iOS",e)}(o,!0),function(o,t){try{const i=/libSystem.B.dylib/,r=s.find((o=>o.match(i)));if(void 0===r)throw"Darwin Dynamic loader not found!";Interceptor.attach(Module.getExportByName(r,"dlopen"),{onEnter:function(o){this.moduleName=o[0].readCString()},onLeave:function(i){if(null!=this.moduleName)for(let i of o.darwin){let o=i[0],r=i[1];o.test(this.moduleName)&&(e(`${this.moduleName} was loaded & will be hooked on iOS!`),r(this.moduleName,t))}}}),console.log("[*] iOS dynamic loader hooked.")}catch(o){i("Loader error: "+o),e("No dynamic loader present for hooking on iOS.")}}(o,!1)}
âœ„
import{OpenSSL_BoringSSL as e}from"../ssl_lib/openssl_boringssl.js";import{socket_library as l}from"./ios_agent.js";import{devlog as o}from"../util/log.js";export class OpenSSL_BoringSSL_iOS extends e{install_tls_keys_callback_hook(){if(ObjC.available){var l=680,t=Module.findExportByName("CoreFoundation","kCFCoreFoundationVersionNumber")?.readDouble();null==t?(o("Installing callback for iOS < 14"),l=680):t>=1751.108&&t<1854?(o("Installing callback for iOS >= 14"),l=696):t>=1854&&t<1946.102?(o("Installing callback for iOS >= 15"),l=760):t>=1946.102&&t<=1979.1?(o("Installing callback for iOS >= 16"),l=768):t>1979.1&&(o("Installing callback for iOS >= 17"),l=776),Interceptor.attach(this.addresses[this.module_name].SSL_CTX_set_info_callback,{onEnter:function(o){ptr(o[0]).add(l).writePointer(e.keylog_callback)}})}}constructor(e,l,o){var t={};t[`*${e}*`]=["SSL_read","SSL_write","BIO_get_fd","SSL_get_session","SSL_SESSION_get_id","SSL_new","SSL_CTX_set_info_callback"],t[`*${l}*`]=["getpeername*","getsockname*","ntohs*","ntohl*"],super(e,l,o,t),this.moduleName=e,this.socket_library=l}execute_hooks(){this.install_tls_keys_callback_hook()}}export function boring_execute(e,o){var t=new OpenSSL_BoringSSL_iOS(e,l,o);if(t.execute_hooks(),o){const l=t.addresses[e];Object.keys(l).length>0&&(global.init_addresses[e]=l)}}
âœ„
import{GnuTLS as s}from"../ssl_lib/gnutls.js";import{socket_library as t}from"./linux_agent.js";export class GnuTLS_Linux extends s{constructor(s,t,e){super(s,t),this.moduleName=s,this.socket_library=t}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook(),this.install_tls_keys_callback_hook()}install_tls_keys_callback_hook(){Interceptor.attach(this.addresses[this.module_name].gnutls_init,{onEnter:function(s){this.session=s[0]},onLeave:function(t){console.log(this.session),s.gnutls_session_set_keylog_function(this.session.readPointer(),s.keylog_callback)}})}}export function gnutls_execute(s,e){var n=new GnuTLS_Linux(s,t,e);if(n.execute_hooks(),e){const t=n.addresses[s];Object.keys(t).length>0&&(global.init_addresses[s]=t)}}
âœ„
import{module_library_mapping as o}from"../shared/shared_structures.js";import{log as s,devlog as i}from"../util/log.js";import{getModuleNames as l,ssl_library_loader as n,invokeHookingFunction as t}from"../shared/shared_functions.js";import{gnutls_execute as r}from"./gnutls_linux.js";import{wolfssl_execute as e}from"./wolfssl_linux.js";import{nss_execute as m}from"./nss_linux.js";import{mbedTLS_execute as u}from"./mbedTLS_linux.js";import{boring_execute as a}from"./openssl_boringssl_linux.js";import{matrixSSL_execute as d}from"./matrixssl_linux.js";var f=l();export const socket_library="libc";export function load_linux_hooking_agent(){o.linux=[[/.*libssl_sb.so/,t(a)],[/.*libssl\.so/,t(a)],[/.*libgnutls\.so/,t(r)],[/.*libwolfssl\.so/,t(e)],[/.*libnspr[0-9]?\.so/,t(m)],[/libmbedtls\.so.*/,t(u)],[/libssl_s.a/,t(d)]],function(o,s){n("linux",o,f,"Linux",s)}(o,!0),function(o,l){try{const i=/.*libdl.*\.so/,n=f.find((o=>o.match(i)));if(void 0===n)throw"Linux Dynamic loader not found!";Interceptor.attach(Module.getExportByName(n,"dlopen"),{onEnter:function(o){this.moduleName=o[0].readCString()},onLeave:function(i){if(null!=this.moduleName)for(let i of o.linux){let o=i[0],n=i[1];o.test(this.moduleName)&&(s(`${this.moduleName} was loaded & will be hooked on Linux!`),n(this.moduleName,l))}}}),console.log("[*] Linux dynamic loader hooked.")}catch(o){i("Loader error: "+o),s("No dynamic loader present for hooking.")}}(o,!1)}
âœ„
import{matrix_SSL as t}from"../ssl_lib/matrixssl.js";import{socket_library as e}from"./linux_agent.js";export class matrix_SSL_Linux extends t{constructor(t,e,s){super(t,e),this.moduleName=t,this.socket_library=e}install_tls_keys_callback_hook(){}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook()}}export function matrixSSL_execute(t,s){var i=new matrix_SSL_Linux(t,e,s);if(i.execute_hooks(),s){const e=i.addresses[t];Object.keys(e).length>0&&(global.init_addresses[t]=e)}}
âœ„
import{mbed_TLS as e}from"../ssl_lib/mbedTLS.js";import{socket_library as t}from"./linux_agent.js";export class mbed_TLS_Linux extends e{constructor(e,t){super(e,t),this.moduleName=e,this.socket_library=t}install_tls_keys_callback_hook(){}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook()}}export function mbedTLS_execute(e,s){var o=new mbed_TLS_Linux(e,t);if(o.execute_hooks(),s){const t=o.addresses[e];Object.keys(t).length>0&&(global.init_addresses[e]=t)}}
âœ„
import{NSS as e}from"../ssl_lib/nss.js";import{socket_library as t}from"./linux_agent.js";import{devlog as a}from"../util/log.js";export class NSS_Linux extends e{constructor(e,t){var a={};a[`*${e}*`]=["PR_Write","PR_Read","PR_FileDesc2NativeHandle","PR_GetPeerName","PR_GetSockName","PR_GetNameForIdentity","PR_GetDescType"],a["*libnss*"]=["PK11_ExtractKeyValue","PK11_GetKeyData"],a["*libssl*.so"]=["SSL_ImportFD","SSL_GetSessionID","SSL_HandshakeCallback"],a[`*${t}*`]=["getpeername","getsockname","ntohs","ntohl"],super(e,t,a),this.moduleName=e,this.socket_library=t}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook(),this.install_tls_keys_callback_hook()}install_tls_keys_callback_hook(){e.getDescType=new NativeFunction(this.addresses[this.module_name].PR_GetDescType,"int",["pointer"]),e.PR_GetNameForIdentity=new NativeFunction(this.addresses[this.module_name].PR_GetNameForIdentity,"pointer",["pointer"]),e.get_SSL_Callback=new NativeFunction(this.addresses[this.module_name].SSL_HandshakeCallback,"int",["pointer","pointer","pointer"]),e.PK11_ExtractKeyValue=new NativeFunction(this.addresses[this.module_name].PK11_ExtractKeyValue,"int",["pointer"]),e.PK11_GetKeyData=new NativeFunction(this.addresses[this.module_name].PK11_GetKeyData,"pointer",["pointer"]),Interceptor.attach(this.addresses[this.module_name].SSL_ImportFD,{onEnter(e){this.fd=e[1]},onLeave(t){if(t.isNull())a("[-] SSL_ImportFD error: unknow null");else{var s=e.get_SSL_Callback(t,e.keylog_callback,NULL);if(e.register_secret_callback(t),s<0){a("Callback Error");var o=new NativeFunction(Module.getExportByName("libnspr4.so","PR_GetErrorText"),"int",["pointer"]),l=Memory.alloc(200);console.log("typeof outbuffer: "+typeof l),console.log("outbuffer: "+l),o(l.readPointer()),a("Error msg: "+l)}else a("[*] keylog callback successfull installed")}}}),Interceptor.attach(this.addresses[this.module_name].SSL_HandshakeCallback,{onEnter(t){this.originalCallback=t[1],Interceptor.attach(ptr(this.originalCallback),{onEnter(t){var s=t[0];a("[*] keylog callback successfull installed via applications callback function"),e.ssl_RecordKeyLog(s)},onLeave(e){}})},onLeave(e){}})}}export function nss_execute(e,a){var s=new NSS_Linux(e,t);if(s.execute_hooks(),a){const t=s.addresses[e];Object.keys(t).length>0&&(global.init_addresses[e]=t)}}
âœ„
import{OpenSSL_BoringSSL as e}from"../ssl_lib/openssl_boringssl.js";import{socket_library as t}from"./linux_agent.js";export class OpenSSL_BoringSSL_Linux extends e{constructor(e,t,s){super(e,t,s),this.moduleName=e,this.socket_library=t}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook(),this.install_tls_keys_callback_hook()}install_tls_keys_callback_hook(){this.SSL_CTX_set_keylog_callback=ObjC.available?new NativeFunction(this.addresses[this.module_name].SSL_CTX_set_info_callback,"void",["pointer","pointer"]):new NativeFunction(this.addresses[this.module_name].SSL_CTX_set_keylog_callback,"void",["pointer","pointer"]);var t=this;Interceptor.attach(this.addresses[this.module_name].SSL_new,{onEnter:function(s){t.SSL_CTX_set_keylog_callback(s[0],e.keylog_callback)}})}}export function boring_execute(e,s){var o=new OpenSSL_BoringSSL_Linux(e,t,s);if(o.execute_hooks(),s){const t=o.addresses[e];Object.keys(t).length>0&&(global.init_addresses[e]=t)}}
âœ„
import{WolfSSL as e}from"../ssl_lib/wolfssl.js";import{socket_library as s}from"./linux_agent.js";import{toHexString as t}from"../shared/shared_functions.js";export class WolfSSL_Linux extends e{constructor(e,s,t){super(e,s),this.moduleName=e,this.socket_library=s}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook(),this.install_tls_keys_callback_hook()}install_tls_keys_callback_hook(){e.wolfSSL_get_client_random=new NativeFunction(this.addresses[this.module_name].wolfSSL_get_client_random,"int",["pointer","pointer","int"]),e.wolfSSL_get_server_random=new NativeFunction(this.addresses[this.module_name].wolfSSL_get_server_random,"int",["pointer","pointer","int"]),e.wolfSSL_SESSION_get_master_key=new NativeFunction(this.addresses[this.module_name].wolfSSL_SESSION_get_master_key,"int",["pointer","pointer","int"]),Interceptor.attach(this.addresses[this.module_name].wolfSSL_connect,{onEnter:function(e){this.ssl=e[0]},onLeave:function(s){this.session=e.wolfSSL_get_session(this.ssl);var o="",n=e.wolfSSL_get_client_random(this.session,NULL,0),_=Memory.alloc(n);e.wolfSSL_get_client_random(this.ssl,_,n);var i=_.readByteArray(n);o=`${o}CLIENT_RANDOM: ${t(i)}\n`;var r=e.wolfSSL_get_server_random(this.session,NULL,0),l=Memory.alloc(r);e.wolfSSL_get_server_random(this.ssl,l,r);var a=l.readByteArray(r);o=`${o}SERVER_RANDOM: ${t(a)}\n`;var S=e.wolfSSL_SESSION_get_master_key(this.session,NULL,0),d=Memory.alloc(S);e.wolfSSL_SESSION_get_master_key(this.session,d,S);var c=d.readByteArray(S);o=`${o}MASTER_KEY: ${t(c)}\n`;var h={contentType:"keylog"};h.keylog=o,send(h)}})}}export function wolfssl_execute(e,t){var o=new WolfSSL_Linux(e,s,t);if(o.execute_hooks(),t){const s=o.addresses[e];Object.keys(s).length>0&&(global.init_addresses[e]=s)}}
âœ„
import{module_library_mapping as o}from"../shared/shared_structures.js";import{log as e,devlog as t}from"../util/log.js";import{getModuleNames as r,ssl_library_loader as i,invokeHookingFunction as n}from"../shared/shared_functions.js";import{boring_execute as a}from"./openssl_boringssl_macos.js";var d=r();export const socket_library="libSystem.B.dylib";export function load_macos_hooking_agent(){o.darwin=[[/.*libboringssl\.dylib/,n(a)]],function(o,e){i("darwin",o,d,"MacOS",e)}(o,!0),function(o,r){try{const t=/libSystem.B.dylib/;if(void 0===d.find((o=>o.match(t))))throw"Darwin Dynamic loader not found!";Interceptor.attach(Module.getExportByName("libSystem.B.dylib","dlopen"),{onEnter:function(o){this.moduleName=o[0].readCString()},onLeave:function(t){if(null!=this.moduleName)for(let t of o.darwin){let o=t[0],i=t[1];o.test(this.moduleName)&&(e(`${this.moduleName} was loaded & will be hooked on MacOS!`),i(this.moduleName,r))}}}),e("MacOS dynamic loader hooked.")}catch(o){t("Loader error: "+o),e("No dynamic loader present for hooking on MacOS.")}}(o,!1)}
âœ„
import{OpenSSL_BoringSSL as e}from"../ssl_lib/openssl_boringssl.js";import{socket_library as s}from"./macos_agent.js";export class OpenSSL_BoringSSL_MacOS extends e{install_tls_keys_callback_hook(){if(console.log(this.addresses),ObjC.available){var e=680,s=Module.findExportByName("CoreFoundation","kCFCoreFoundationVersionNumber")?.readDouble();null==s?e=680:s>=1751.108&&(e=696),Interceptor.attach(this.addresses[this.module_name].SSL_CTX_set_info_callback,{onEnter:function(s){ptr(s[0]).add(e).writePointer(this.keylog_callback)}})}}constructor(e,s,o){var t={};t[`*${e}*`]=["SSL_read","SSL_write","BIO_get_fd","SSL_get_session","SSL_SESSION_get_id","SSL_new","SSL_CTX_set_info_callback"],t[`*${s}*`]=["getpeername*","getsockname*","ntohs*","ntohl*"],super(e,s,o,t),this.moduleName=e,this.socket_library=s}execute_hooks(){this.install_tls_keys_callback_hook()}}export function boring_execute(e,o){var t=new OpenSSL_BoringSSL_MacOS(e,s,o);if(t.execute_hooks(),o){const s=t.addresses[e];Object.keys(s).length>0&&(global.init_addresses[e]=s)}}
âœ„
import{log as e,devlog as r}from"../util/log.js";import{AF_INET as t,AF_INET6 as n}from"./shared_structures.js";function o(r){let t=Module.findBaseAddress(r);t!==NULL&&null!==t||(e("[*] Waiting 5 milliseconds for the loading of "+r),setTimeout(o,5))}export function ssl_library_loader(t,n,s,a,i){for(let d of n[t]){let t=new RegExp(d[0]),n=d[1];for(let d of s)if(t.test(d))try{e(`${d} found & will be hooked on ${a}!`);try{Module.ensureInitialized(d)}catch(e){o(d)}n(d,i)}catch(t){e(`error: skipping module ${d}`),r("Loader error: "+t)}}}export function getSocketLibrary(){var r=getModuleNames();switch(Process.platform){case"linux":return r.find((e=>e.match(/libc.*\.so/)));case"windows":return"WS2_32.dll";case"darwin":return"libSystem.B.dylib";default:return e(`Platform "${Process.platform} currently not supported!`),""}}export function getModuleNames(){var e=[];return Process.enumerateModules().forEach((r=>e.push(r.name))),e}export function readAddresses(e,t){const n=new ApiResolver("module"),o={};o[e]||(o[e]={});for(const s in t)t[s].forEach((function(t){const a=n.enumerateMatches("exports:"+s+"!"+t);let i=0,d=t.toString();if(d.endsWith("*")&&(d=d.substring(0,d.length-1)),0==a.length)throw"Could not find "+s+"!"+t;if(1==a.length)r("Found "+t+" "+a[0].address);else for(let e=0;e<a.length;e++)if(a[e].name.endsWith(d)){i=e,r("Found "+t+" "+a[i].address);break}o[e][d]=a[i].address}));return o}export function readAddresses2(e,t){var n=new ApiResolver("module"),o={};o[e]||(o[e]={});for(let s in t)t[s].forEach((function(t){var a=n.enumerateMatches("exports:"+s+"!"+t),i=0,d=t.toString();if(d.endsWith("*")&&(d=d.substring(0,d.length-1)),0==a.length)throw"Could not find "+s+"!"+t;if(1==a.length)r("Found "+t+" "+a[0].address);else for(var l=0;l<a.length;l++)if(a[l].name.endsWith(d)){r("Found "+t+" "+a[i=l].address);break}o[e][d]=a[i].address}));return o}export function getBaseAddress(e){console.log("Module to find:",e);const r=Process.enumerateModules();for(const t of r)if(t.name==e)return t.base;return null}export function getPortsAndAddresses(e,o,s,a){var i={};if(a&&e<0)return i.src_port=1234,i.src_addr="127.0.0.1",i.dst_port=2345,i.dst_addr="127.0.0.1",i.ss_family="AF_INET",i;for(var d=new NativeFunction(s.getpeername,"int",["int","pointer","pointer"]),l=new NativeFunction(s.getsockname,"int",["int","pointer","pointer"]),u=new NativeFunction(s.ntohs,"uint16",["uint16"]),c=new NativeFunction(s.ntohl,"uint32",["uint32"]),f=Memory.alloc(4),g=Memory.alloc(128),p=["src","dst"],m=0;m<p.length;m++)if(f.writeU32(128),"src"==p[m]!==o?(r("src"),l(e,g,f)):(r("dst"),d(e,g,f)),g.readU16()==t)i[p[m]+"_port"]=u(g.add(2).readU16()),i[p[m]+"_addr"]=c(g.add(4).readU32()),i.ss_family="AF_INET";else{if(g.readU16()!=n)throw r("[-] getPortsAndAddresses resolving error:"+g.readU16()),"Only supporting IPv4/6";i[p[m]+"_port"]=u(g.add(2).readU16()),i[p[m]+"_addr"]="";for(var h=g.add(8),v=0;v<16;v+=1)i[p[m]+"_addr"]+=("0"+h.add(v).readU8().toString(16).toUpperCase()).substr(-2);0===i[p[m]+"_addr"].toString().indexOf("00000000000000000000FFFF")?(i[p[m]+"_addr"]=c(h.add(12).readU32()),i.ss_family="AF_INET"):i.ss_family="AF_INET6"}return i}export function byteArrayToString(e){return Array.from(e,(function(e){return("0"+(255&e).toString(16)).slice(-2)})).join("")}export function toHexString(e){const r=[];for(let e=0;e<=255;++e){const t=e.toString(16).padStart(2,"0");r.push(t)}return Array.prototype.map.call(new Uint8Array(e),(e=>r[e])).join("")}export function reflectionByteArrayToString(e){for(var r="",t=Java.use("java.lang.reflect.Array"),n=0;n<t.getLength(e);n++)r+=("0"+(255&t.get(e,n)).toString(16)).slice(-2);return r}export function byteArrayToNumber(e){for(var r=0,t=0;t<e.length;t++)r=256*r+(255&e[t]);return r}export function getAttribute(e,r){var t=Java.use("java.lang.Class"),n=Java.cast(e.getClass(),t).getDeclaredField(r);return n.setAccessible(!0),n.get(e)}export function invokeHookingFunction(e){return(r,t)=>{e(r,t)}}
âœ„
export var module_library_mapping={};export const AF_INET=2;export const AF_INET6=10;export const pointerSize=Process.pointerSize;
âœ„
import{readAddresses as s,getPortsAndAddresses as e,getBaseAddress as t}from"../shared/shared_functions.js";import{log as n}from"../util/log.js";import{offsets as o,enable_default_fd as i}from"../ssl_log.js";export class GnuTLS{constructor(e,i,r){if(this.moduleName=e,this.socket_library=i,this.passed_library_method_mapping=r,this.library_method_mapping={},void 0!==r?this.library_method_mapping=r:(this.library_method_mapping[`*${e}*`]=["gnutls_record_recv","gnutls_record_send","gnutls_session_set_keylog_function","gnutls_transport_get_int","gnutls_session_get_id","gnutls_init","gnutls_handshake","gnutls_session_get_keylog_function","gnutls_session_get_random"],this.library_method_mapping[`*${i}*`]=["getpeername","getsockname","ntohs","ntohl"]),this.addresses=s(e,this.library_method_mapping),this.module_name=e,"{OFFSETS}"!=o&&null!=o.gnutls){if(null!=o.sockets){const s=t(i);for(const e of Object.keys(o.sockets))this.addresses[this.moduleName][`${e}`]=o.sockets[`${e}`].absolute||null==s?ptr(o.sockets[`${e}`].address):s.add(ptr(o.sockets[`${e}`].address))}const s=t(e);null==s&&n("Unable to find library base address! Given address values will be interpreted as absolute ones!");for(const e of Object.keys(o.gnutls))this.addresses[this.moduleName][`${e}`]=o.gnutls[`${e}`].absolute||null==s?ptr(o.gnutls[`${e}`].address):s.add(ptr(o.gnutls[`${e}`].address))}GnuTLS.gnutls_transport_get_int=new NativeFunction(this.addresses[this.moduleName].gnutls_transport_get_int,"int",["pointer"]),GnuTLS.gnutls_session_get_id=new NativeFunction(this.addresses[this.moduleName].gnutls_session_get_id,"int",["pointer","pointer","pointer"]),GnuTLS.gnutls_session_set_keylog_function=new NativeFunction(this.addresses[this.moduleName].gnutls_session_set_keylog_function,"void",["pointer","pointer"]),GnuTLS.gnutls_session_get_random=new NativeFunction(this.addresses[this.moduleName].gnutls_session_get_random,"pointer",["pointer","pointer","pointer"])}static getSslSessionId(s){var e=Memory.alloc(4),t=GnuTLS.gnutls_session_get_id(s,NULL,e);if(0!=t)return i?(n("using dummy SessionID: 59FD71B7B90202F359D89E66AE4E61247954E28431F6C6AC46625D472FF76337"),"59FD71B7B90202F359D89E66AE4E61247954E28431F6C6AC46625D472FF76337"):"";var o=e.readU32(),r=Memory.alloc(o);if(0!=(t=GnuTLS.gnutls_session_get_id(s,r,e)))return i?(n("using dummy SessionID: 59FD71B7B90202F359D89E66AE4E61247954E28431F6C6AC46625D472FF76337"),"59FD71B7B90202F359D89E66AE4E61247954E28431F6C6AC46625D472FF76337"):"";for(var a="",l=0;l<o;l++)a+=("0"+r.add(l).readU8().toString(16).toUpperCase()).substr(-2);return a}install_plaintext_read_hook(){var s=this.module_name,t=this.addresses;Interceptor.attach(this.addresses[this.moduleName].gnutls_record_recv,{onEnter:function(n){var o=e(GnuTLS.gnutls_transport_get_int(n[0]),!0,t[s],i);o.ssl_session_id=GnuTLS.getSslSessionId(n[0]),o.function="SSL_read",this.message=o,this.buf=n[1]},onLeave:function(s){(s|=0)<=0||(this.message.contentType="datalog",send(this.message,this.buf.readByteArray(s)))}})}install_plaintext_write_hook(){var s=this.module_name,t=this.addresses;Interceptor.attach(this.addresses[this.moduleName].gnutls_record_send,{onEnter:function(n){var o=e(GnuTLS.gnutls_transport_get_int(n[0]),!1,t[s],i);o.ssl_session_id=GnuTLS.getSslSessionId(n[0]),o.function="SSL_write",o.contentType="datalog",send(o,n[1].readByteArray(parseInt(n[2])))},onLeave:function(s){}})}install_tls_keys_callback_hook(){}}GnuTLS.keylog_callback=new NativeCallback((function(s,e,t){for(var n={contentType:"keylog"},o=t.add(Process.pointerSize).readUInt(),i="",r=t.readPointer(),a=0;a<o;a++)i+=("0"+r.add(a).readU8().toString(16).toUpperCase()).substr(-2);var l=Memory.alloc(Process.pointerSize+4),d=Memory.alloc(Process.pointerSize+4);void 0!==this?GnuTLS.gnutls_session_get_random(s,d,l):console.log("[-] Error while installing keylog callback");var _="";for(r=d.readPointer(),a=0;a<32;a++)_+=("0"+r.add(a).readU8().toString(16).toUpperCase()).substr(-2);return n.keylog=e.readCString()+" "+_+" "+i,send(n),0}),"int",["pointer","pointer","pointer"]);
âœ„
import{log as e,devlog as r}from"../util/log.js";import{execute as o}from"../android/conscrypt.js";import{isAndroid as i}from"../util/process_infos.js";export class SSL_Java{install_java_hooks(){Java.available&&setTimeout((function(){Java.perform((function(){var t=Java.use("java.security.Security");t.getProviders().toString().includes("GmsCore_OpenSSL")&&(e("WARNING: PID "+Process.id+" Detected GmsCore_OpenSSL Provider. This can be a bit unstable. If you having issues, rerun with -spawn for early instrumentation. Trying to remove it to fall back on default Provider"),t.removeProvider("GmsCore_OpenSSL"),e("Removed GmsCore_OpenSSL")),o(),t.getProviders().toString().includes("Ssl_Guard")&&(e("Ssl_Guard deteced, removing it to fall back on default Provider"),t.removeProvider("Ssl_Guard"),e("Removed Ssl_Guard")),t.getProviders().toString().includes("Conscrypt version")&&(e("Conscrypt detected"),t.removeProvider("Conscrypt"),e("Removed Conscrypt")),t.getProviders().toString().includes("WolfSSLProvider")&&(e("WolfSSLProvider detected"),t.removeProvider("WolfSSLProvider"),e("Removed WolfSSLProvider")),r("Remaining: "+t.getProviders().toString()),t.insertProviderAt.implementation=function(r,o){return r.getName().includes("Conscrypt")||r.getName().includes("Ssl_Guard")||r.getName().includes("GmsCore_OpenSSL")||r.getName().includes("WolfSSLProvider")?(e("Blocking provider registration (insertProviderAt) of  "+r.getName()),o):this.insertProviderAt(r,o)},t.insertProviderAt.implementation=function(r){return r.getName().includes("Conscrypt")||r.getName().includes("Ssl_Guard")||r.getName().includes("GmsCore_OpenSSL")||r.getName().includes("WolfSSLProvider")?(e("Blocking provider registration (addProvider) of "+r.getName()),1):i()&&"AndroidNSSP"===r.getName()?this.insertProviderAt(r,1):this.addProvider(r)}}))}),0)}}
âœ„
import{readAddresses as e,getPortsAndAddresses as s,getBaseAddress as t}from"../shared/shared_functions.js";import{enable_default_fd as i,offsets as r}from"../ssl_log.js";import{log as a}from"../util/log.js";export class matrix_SSL{constructor(s,i,o){if(this.moduleName=s,this.socket_library=i,this.passed_library_method_mapping=o,this.library_method_mapping={},void 0!==o?this.library_method_mapping=o:(this.library_method_mapping[`*${s}*`]=["matrixSslReceivedData","matrixSslGetWritebuf","matrixSslGetSid","matrixSslEncodeWritebuf"],this.library_method_mapping[`*${i}*`]=["getpeername","getsockname","ntohs","ntohl","socket"]),this.addresses=e(s,this.library_method_mapping),this.module_name=s,"{OFFSETS}"!=r&&null!=r.matrixssl){if(null!=r.sockets){const e=t(i);for(const s of Object.keys(r.sockets))this.addresses[this.moduleName][`${s}`]=r.sockets[`${s}`].absolute||null==e?ptr(r.sockets[`${s}`].address):e.add(ptr(r.sockets[`${s}`].address))}const e=t(s);null==e&&a("Unable to find library base address! Given address values will be interpreted as absolute ones!");for(const s of Object.keys(r.matrixssl))this.addresses[this.moduleName][`${s}`]=r.matrixssl[`${s}`].absolute||null==e?ptr(r.matrixssl[`${s}`].address):e.add(ptr(r.matrixssl[`${s}`].address))}matrix_SSL.matrixSslNewCLientSession=new NativeFunction(this.addresses[this.moduleName].matrixSslNewClientSession,"int",["pointer","pointer","pointer","pointer","int","pointer","pointer","pointer","pointer","pointer"]),matrix_SSL.matrixSslGetSid=new NativeFunction(this.addresses[this.moduleName].matrixSslGetSid,"pointer",["pointer"])}install_plaintext_read_hook(){var e=this.module_name,t=this.addresses;Interceptor.attach(this.addresses[this.moduleName].matrixSslReceivedData,{onEnter:function(r){this.buffer=r[2],this.len=r[3];var a=s(this.fd,!0,t[e],i);a.ssl_session_id=void 0===this.addresses[this.moduleName].matrixSslGetSid?matrix_SSL.sessionId:this.getSessionId(r[0]),a.function="matrixSslReceivedData",this.message=a},onLeave:function(e){if(!((e|=0)<=0)){var s=this.buffer.readByteArray(this.len);this.message.contentType="datalog",send(this.message,s)}}})}install_plaintext_write_hook(){var e=this.module_name,t=this.addresses;Interceptor.attach(this.addresses[this.moduleName].matrixSslGetWritebuf,{onEnter:function(e){this.outBuffer=e[1]},onLeave:function(e){(e|=0)<=0||(this.outBufferLength=e)}}),Interceptor.attach(this.addresses[this.moduleName].matrixSslEncodeWritebuf,{onEnter:function(r){var a=this.outBuffer.readByteArray(this.outBufferLength),o=s(this.fd,!1,t[e],i);o.ssl_session_id=void 0===this.addresses[this.moduleName].matrixSslGetSid?matrix_SSL.sessionId:this.getSessionId(r[0]),o.function="matrixSslEncodeWritebuf",o.contentType="datalog",send(o,a)}})}install_tls_keys_callback_hook(){}install_helper_hook(){Interceptor.attach(this.addresses[this.moduleName].matrixSslNewSessionId,{onEnter:function(e){this.sslSessionPointer=e[0]},onLeave:function(e){if(!((e|=0)<=0)){var s=this.sslSessionPointer.add(2*Process.pointerSize).readU32();matrix_SSL.sessionId=this.sslSessionPointer.add(Process.pointerSize).readPointer().readCString(s)}}}),Interceptor.attach(this.addresses[this.moduleName].connect,{onEnter:function(e){},onLeave:function(e){(e|=0)<=0||(this.fd=e)}})}getSessionId(e){const s=matrix_SSL.matrixSslGetSid(e),t=s.add(2*Process.pointerSize).readU32();return s.add(Process.pointerSize).readPointer().readCString(t)}}
âœ„
import{readAddresses as e,getPortsAndAddresses as s,getBaseAddress as t}from"../shared/shared_functions.js";import{offsets as r,enable_default_fd as d}from"../ssl_log.js";import{log as o}from"../util/log.js";export class mbed_TLS{constructor(s,d,i){if(this.moduleName=s,this.socket_library=d,this.passed_library_method_mapping=i,this.library_method_mapping={},void 0!==i?this.library_method_mapping=i:(this.library_method_mapping[`*${s}*`]=["mbedtls_ssl_read","mbedtls_ssl_write"],this.library_method_mapping[`*${d}*`]=["getpeername","getsockname","ntohs","ntohl"]),this.addresses=e(s,this.library_method_mapping),this.module_name=s,"{OFFSETS}"!=r&&null!=r.mbedtls){if(null!=r.sockets){const e=t(d);for(const s of Object.keys(r.sockets))this.addresses[this.moduleName][`${s}`]=r.sockets[`${s}`].absolute||null==e?ptr(r.sockets[`${s}`].address):e.add(ptr(r.sockets[`${s}`].address))}const e=t(s);null==e&&o("Unable to find library base address! Given address values will be interpreted as absolute ones!");for(const s of Object.keys(r.mbedtls))this.addresses[this.moduleName][`${s}`]=r.mbedtls[`${s}`].absolute||null==e?ptr(r.mbedtls[`${s}`].address):e.add(ptr(r.mbedtls[`${s}`].address))}}static parse_mbedtls_ssl_context_struct(e){return{conf:e.readPointer(),state:e.add(Process.pointerSize).readS32(),renego_status:e.add(Process.pointerSize+4).readS32(),renego_records_seen:e.add(Process.pointerSize+4+4).readS32(),major_ver:e.add(Process.pointerSize+4+4+4).readS32(),minor_ver:e.add(Process.pointerSize+4+4+4+4).readS32(),badmac_seen:e.add(Process.pointerSize+4+4+4+4+4).readU32(),f_send:e.add(Process.pointerSize+4+4+4+4+4+4).readPointer(),f_recv:e.add(Process.pointerSize+4+4+4+4+4+4+Process.pointerSize).readPointer(),f_recv_timeout:e.add(Process.pointerSize+4+4+4+4+4+4+2*Process.pointerSize).readPointer(),p_bio:e.add("windows"==Process.platform?48:56).readPointer(),session_in:e.add(Process.pointerSize+4+4+4+4+4+4+4*Process.pointerSize).readPointer(),session_out:e.add(Process.pointerSize+4+4+4+4+4+4+5*Process.pointerSize).readPointer(),session:{start:e.add(24+7*Process.pointerSize).readPointer().readPointer(),ciphersuite:e.add(24+7*Process.pointerSize).readPointer().add(8).readS32(),compression:e.add(24+7*Process.pointerSize).readPointer().add(12).readS32(),id_len:e.add(24+7*Process.pointerSize).readPointer().add(16).readU32(),id:e.add(24+7*Process.pointerSize).readPointer().add(20).readByteArray(e.add(24+7*Process.pointerSize).readPointer().add(16).readU32())}}}static getSocketDescriptor(e){return mbed_TLS.parse_mbedtls_ssl_context_struct(e).p_bio.readS32()}static getSessionId(e){for(var s=mbed_TLS.parse_mbedtls_ssl_context_struct(e),t="",r=0;r<s.session.id_len;r++)t=`${t}${s.session.id?.unwrap().add(r).readU8().toString(16).toUpperCase()}`;return t}install_plaintext_read_hook(){var e=this.module_name,t=this.addresses;Interceptor.attach(this.addresses[this.moduleName].mbedtls_ssl_read,{onEnter:function(r){this.buffer=r[1],this.len=r[2],this.sslContext=r[0];var o=s(mbed_TLS.getSocketDescriptor(r[0]),!0,t[e],d);o.ssl_session_id=mbed_TLS.getSessionId(r[0]),o.function="mbedtls_ssl_read",this.message=o},onLeave:function(e){if(!((e|=0)<=0)){var s=this.buffer.readByteArray(e);this.message.contentType="datalog",send(this.message,s)}}})}install_plaintext_write_hook(){var e=this.module_name,t=this.addresses;Interceptor.attach(this.addresses[this.moduleName].mbedtls_ssl_write,{onEnter:function(r){var o=r[1],i=r[2];if(!((i|=0)<=0)){var a=o.readByteArray(i),n=s(mbed_TLS.getSocketDescriptor(r[0]),!1,t[e],d);n.ssl_session_id=mbed_TLS.getSessionId(r[0]),n.function="mbedtls_ssl_write",n.contentType="datalog",send(n,a)}}})}install_tls_keys_callback_hook(){}}
âœ„
import{readAddresses as e,getBaseAddress as t}from"../shared/shared_functions.js";import{pointerSize as r,AF_INET as a,AF_INET6 as d}from"../shared/shared_structures.js";import{log as s,devlog as i}from"../util/log.js";import{offsets as S,enable_default_fd as n}from"../ssl_log.js";const{readU32:o,readU64:_,readPointer:l,writeU32:c,writeU64:g,writePointer:p}=NativePointer.prototype;export var SECStatus;!function(e){e[e.SECWouldBlock=-2]="SECWouldBlock",e[e.SECFailure=-1]="SECFailure",e[e.SECSuccess=0]="SECSuccess"}(SECStatus||(SECStatus={}));export var PRDescType;!function(e){e[e.PR_DESC_FILE=1]="PR_DESC_FILE",e[e.PR_DESC_SOCKET_TCP=2]="PR_DESC_SOCKET_TCP",e[e.PR_DESC_SOCKET_UDP=3]="PR_DESC_SOCKET_UDP",e[e.PR_DESC_LAYERED=4]="PR_DESC_LAYERED",e[e.PR_DESC_PIPE=5]="PR_DESC_PIPE"}(PRDescType||(PRDescType={}));export class NSS{constructor(r,a,d){if(this.moduleName=r,this.socket_library=a,this.passed_library_method_mapping=d,this.library_method_mapping={},void 0!==d?this.library_method_mapping=d:(this.library_method_mapping[`*${r}*`]=["PR_Write","PR_Read","PR_FileDesc2NativeHandle","PR_GetPeerName","PR_GetSockName","PR_GetNameForIdentity","PR_GetDescType"],this.library_method_mapping["*libnss*"]=["PK11_ExtractKeyValue","PK11_GetKeyData"],this.library_method_mapping["*libssl*.so"]=["SSL_ImportFD","SSL_GetSessionID","SSL_HandshakeCallback"],this.library_method_mapping[`*${a}*`]=["getpeername","getsockname","ntohs","ntohl"]),this.addresses=e(r,this.library_method_mapping),this.module_name=r,"{OFFSETS}"!=S&&null!=S.nss){if(null!=S.sockets){const e=t(a);for(const t of Object.keys(S.sockets))this.addresses[this.moduleName][`${t}`]=S.sockets[`${t}`].absolute||null==e?ptr(S.sockets[`${t}`].address):e.add(ptr(S.sockets[`${t}`].address))}const e=t(r);null==e&&s("Unable to find library base address! Given address values will be interpreted as absolute ones!");for(const t of Object.keys(S.nss))this.addresses[this.moduleName][`${t}`]=S.nss[`${t}`].absolute||null==e?ptr(S.nss[`${t}`].address):e.add(ptr(S.nss[`${t}`].address))}NSS.SSL_SESSION_get_id=new NativeFunction(this.addresses[this.moduleName].SSL_GetSessionID,"pointer",["pointer"]),NSS.getsockname=new NativeFunction(this.addresses[this.moduleName].PR_GetSockName,"int",["pointer","pointer"]),NSS.getpeername=new NativeFunction(this.addresses[this.moduleName].PR_GetPeerName,"int",["pointer","pointer"])}static parse_struct_SECItem(e){return{type:e.readU64(),data:e.add(r).readPointer(),len:e.add(2*r).readU32()}}static parse_struct_sslSocketStr(e){return{fd:e.readPointer(),version:e.add(160),handshakeCallback:e.add(464),secretCallback:e.add(568),ssl3:e.add(1432)}}static parse_struct_ssl3Str(e){return{crSpec:e.readPointer(),prSpec:e.add(r).readPointer(),cwSpec:e.add(2*r).readPointer(),pwSpec:e.add(3*r).readPointer(),peerRequestedKeyUpdate:e.add(4*r).readU32(),keyUpdateDeferred:e.add(4*r+4).readU32(),deferredKeyUpdateRequest:e.add(4*r+8).readU32(),clientCertRequested:e.add(4*r+12).readU32(),clientCertificate:e.add(4*r+16).readPointer(),clientPrivateKey:e.add(5*r+16).readPointer(),clientCertChain:e.add(6*r+16).readPointer(),sendEmptyCert:e.add(7*r+16).readU32(),policy:e.add(7*r+20).readU32(),peerCertArena:e.add(7*r+24).readPointer(),peerCertChain:e.add(8*r+24).readPointer(),ca_list:e.add(9*r+24).readPointer(),hs:{server_random:e.add(10*r+24),client_random:e.add(10*r+56),client_inner_random:e.add(10*r+88),ws:e.add(10*r+120).readU32(),hashType:e.add(10*r+124).readU32(),messages:{data:e.add(10*r+128).readPointer(),len:e.add(11*r+128).readU32(),space:e.add(11*r+132).readU32(),fixed:e.add(11*r+136).readU32()},echInnerMessages:{data:e.add(11*r+140).readPointer(),len:e.add(12*r+140).readU32(),space:e.add(12*r+144).readU32(),fixed:e.add(12*r+148).readU32()},md5:e.add(12*r+152).readPointer(),sha:e.add(13*r+152).readPointer(),shaEchInner:e.add(14*r+152).readPointer(),shaPostHandshake:e.add(15*r+152).readPointer(),signatureScheme:e.add(16*r+152).readU32(),kea_def:e.add(16*r+156).readPointer(),cipher_suite:e.add(17*r+156).readU32(),suite_def:e.add(17*r+160).readPointer(),msg_body:{data:e.add(18*r+160).readPointer(),len:e.add(19*r+160).readU32(),space:e.add(19*r+164).readU32(),fixed:e.add(19*r+168).readU32()},header_bytes:e.add(19*r+172).readU32(),msg_type:e.add(19*r+176).readU32(),msg_len:e.add(19*r+180).readU32(),isResuming:e.add(19*r+184).readU32(),sendingSCSV:e.add(19*r+188).readU32(),receivedNewSessionTicket:e.add(19*r+192).readU32(),newSessionTicket:e.add(19*r+196),finishedBytes:e.add(19*r+240).readU32(),finishedMsgs:e.add(19*r+244),authCertificatePending:e.add(18*r+316).readU32(),restartTarget:e.add(19*r+320).readU32(),canFalseStart:e.add(19*r+324).readU32(),preliminaryInfo:e.add(19*r+328).readU32(),remoteExtensions:{next:e.add(19*r+332).readPointer(),prev:e.add(20*r+332).readPointer()},echOuterExtensions:{next:e.add(21*r+332).readPointer(),prev:e.add(22*r+332).readPointer()},sendMessageSeq:e.add(23*r+332).readU32(),lastMessageFlight:{next:e.add(23*r+336).readPointer(),prev:e.add(24*r+336).readPointer()},maxMessageSent:e.add(25*r+336).readU16(),recvMessageSeq:e.add(25*r+338).readU16(),recvdFragments:{data:e.add(25*r+340).readPointer(),len:e.add(26*r+340).readU32(),space:e.add(26*r+344).readU32(),fixed:e.add(26*r+348).readU32()},recvdHighWater:e.add(26*r+352).readU32(),cookie:{type:e.add(26*r+356).readU64(),data:e.add(27*r+356).readPointer(),len:e.add(28*r+356).readU32()},times_array:e.add(28*r+360).readU32(),rtTimer:e.add(28*r+432).readPointer(),ackTimer:e.add(29*r+432).readPointer(),hdTimer:e.add(30*r+432).readPointer(),rtRetries:e.add(31*r+432).readU32(),srvVirtName:{type:e.add(31*r+436).readU64(),data:e.add(32*r+436).readPointer(),len:e.add(33*r+436).readU32()},currentSecret:e.add(33*r+440).readPointer(),resumptionMasterSecret:e.add(34*r+440).readPointer(),dheSecret:e.add(35*r+440).readPointer(),clientEarlyTrafficSecret:e.add(36*r+440).readPointer(),clientHsTrafficSecret:e.add(37*r+440).readPointer(),serverHsTrafficSecret:e.add(38*r+440).readPointer(),clientTrafficSecret:e.add(39*r+440).readPointer(),serverTrafficSecret:e.add(40*r+440).readPointer(),earlyExporterSecret:e.add(41*r+440).readPointer(),exporterSecret:e.add(42*r+440).readPointer()}}}static parse_struct_sl3CipherSpecStr(e){return{link:e.add,refCt:e.add(2*r),direction:e.add(2*r+4),version:e.add(2*r+8),recordVersion:e.add(2*r+12),cipherDef:e.add(2*r+16).readPointer(),macDef:e.add(3*r+16).readPointer(),cipher:e.add(4*r+16),cipherContext:e.add(4*r+24).readPointer(),master_secret:e.add(5*r+24).readPointer()}}static getPortsAndAddressesFromNSS(e,t,r,s){var S={};if(s&&null===e)return S.src_port=1234,S.src_addr="127.0.0.1",S.dst_port=2345,S.dst_addr="127.0.0.1",S.ss_family="AF_INET",S;for(var n=new NativeFunction(r.PR_GetPeerName,"int",["pointer","pointer"]),o=new NativeFunction(r.PR_GetSockName,"int",["pointer","pointer"]),_=new NativeFunction(r.ntohs,"uint16",["uint16"]),l=new NativeFunction(r.ntohl,"uint32",["uint32"]),c=(Memory.alloc(2),Memory.alloc(4)),g=Memory.alloc(128),p=["src","dst"],N=0;N<p.length;N++)if(c.writeU32(128),"src"==p[N]!==t?o(e,g):n(e,g),g.readU16()==a)S[p[N]+"_port"]=_(g.add(2).readU16()),S[p[N]+"_addr"]=l(g.add(4).readU32()),S.ss_family="AF_INET";else{if(g.readU16()!=d)throw i("[-] PIPE descriptor error"),"Only supporting IPv4/6";S[p[N]+"_port"]=_(g.add(2).readU16()),S[p[N]+"_addr"]="";for(var u=g.add(8),m=0;m<16;m+=1)S[p[N]+"_addr"]+=("0"+u.add(m).readU8().toString(16).toUpperCase()).substr(-2);0===S[p[N]+"_addr"].toString().indexOf("00000000000000000000FFFF")?(S[p[N]+"_addr"]=l(u.add(12).readU32()),S.ss_family="AF_INET"):S.ss_family="AF_INET6"}return S}static is_ptr_at_mem_location(e){try{return e.readPointer(),1}catch(e){return-1}}static NSS_FindIdentityForName(e,t){var a=e.add(2*r).readPointer(),d=e.add(3*r).readPointer(),s=e.add(5*r).readPointer();if(!s.isNull()&&NSS.PR_GetNameForIdentity(s).readCString()==t)return e;return a.isNull()?(d.isNull()||i("Have upper"),i("[-] error while getting SSL layer"),NULL):this.NSS_FindIdentityForName(a,t)}static getSessionIdString(e,t){for(var r="",a=0;a<t;a++)r+=("0"+e.add(a).readU8().toString(16).toUpperCase()).substr(-2);return r}static getSSL_Layer(e){var t=new NativeFunction(Module.getExportByName("libnspr4.so","PR_GetIdentitiesLayer"),"pointer",["pointer","int"])(e,3);return ptr(t.toString()).isNull()?(i("PR_BAD_DESCRIPTOR_ERROR: "+t),-1):t}static getHexString(e,t){for(var r="",a=0;a<t;a++)r+=("0"+e.add(a).readU8().toString(16).toLowerCase()).substr(-2);return r}static getSslSessionIdFromFD(e){var t="3E8ABF58649A1A1C58824D704173BA9AAFA2DA33B45FFEA341D218B29BBACF8F",a=NSS.getDescType(e),d=NSS.NSS_FindIdentityForName(e,"SSL");if(!d)return t;if(null==(p=ptr(NSS.SSL_SESSION_get_id(d).toString()))||p.isNull()){try{if(i("---- getSslSessionIdFromFD -----"),i("ERROR"),i("pRFileDescType: "+NSS.getDescType(e)),2==a){var s=Memory.dup(e,32),S=new NativeFunction(Module.getExportByName("libnspr4.so","PR_GetLayersIdentity"),"uint32",["pointer"]),n=new NativeFunction(Module.getExportByName("libnspr4.so","PR_GetNameForIdentity"),"pointer",["uint32"]),o=S(e);i("LayerID: "+o);var _=n(o);i("name address: "+_),i("name: "+ptr(_.toString()).readCString());var l=ptr(NSS.getSSL_Layer(e).toString());if(i("sslSessionIdSECItem2 ="+l),l.toString().startsWith("0x7f")){Memory.dup(l,32);var c=ptr(NSS.SSL_SESSION_get_id(l).toString());i("sslSessionIdSECItem3 ="+c)}var g=ptr(NSS.SSL_SESSION_get_id(e).toString());i("sslSessionIdSECItem4 ="+g),i("Using Dummy Session ID"),i("")}else if(4==a){e=ptr(NSS.getSSL_Layer(e).toString());var p=ptr(NSS.SSL_SESSION_get_id(e).toString());i("new sessionid_ITEM: "+p)}else{i("---- SSL Session Analysis ------------");s=Memory.dup(p,32);i(hexdump(s))}i("---- getSslSessionIdFromFD finished -----"),i("")}catch(e){i("Error:"+e)}return t}var N=p.add(2*r).readU32(),u=p.add(r).readPointer();return NSS.getSessionIdString(u,N)}static get_SSL_FD(e){var t=NSS.NSS_FindIdentityForName(e,"SSL");if(!t)return i("error: couldn't get SSL Layer from pRFileDesc"),NULL;var r=NSS.get_SSL_Socket(t);return r||(i("error: couldn't get sslSocketFD"),NULL)}static get_SSL_Socket(e){return e.add(1*r).readPointer()}static getMasterSecret(e){var t=e.cwSpec,r=NSS.parse_struct_sl3CipherSpecStr(t).master_secret;return NSS.get_Secret_As_HexString(r)}static getClientRandom(e){return NSS.getHexString(e.hs.client_random,NSS.SSL3_RANDOM_LENGTH)}static get_SSL_Version(e){var t=NSS.get_SSL_FD(e);if(t.isNull())return-1;return t.add(160).readU16()}static get_Secret_As_HexString(e){if(NSS.PK11_ExtractKeyValue(e)!=SECStatus.SECSuccess)return"";var t=NSS.PK11_GetKeyData(e),r=NSS.parse_struct_SECItem(t);return NSS.getHexString(r.data,r.len)}static is_TLS_1_3(e){return e>771}static get_Keylog_Dump(e,t,r){return e+" "+t+" "+r}static getTLS_Keys(e,t){var r={contentType:"keylog"};i("[*] trying to log some keying materials ...");var a=NSS.get_SSL_FD(e);if(!a.isNull()){var d=NSS.parse_struct_sslSocketStr(a).ssl3,s=NSS.parse_struct_ssl3Str(d),S=NSS.getClientRandom(s);if(1==NSS.doTLS13_RTT0){var n=NSS.get_Secret_As_HexString(s.hs.earlyExporterSecret);i(NSS.get_Keylog_Dump("EARLY_EXPORTER_SECRET",S,n)),r.keylog=NSS.get_Keylog_Dump("EARLY_EXPORTER_SECRET",S,n),send(r),NSS.doTLS13_RTT0=-1}if(1==t){i("[*] exporting TLS 1.3 handshake keying material");var o=NSS.get_Secret_As_HexString(s.hs.clientHsTrafficSecret);i(NSS.get_Keylog_Dump("CLIENT_HANDSHAKE_TRAFFIC_SECRET",S,o)),r.keylog=NSS.get_Keylog_Dump("CLIENT_HANDSHAKE_TRAFFIC_SECRET",S,o),send(r);var _=NSS.get_Secret_As_HexString(s.hs.serverHsTrafficSecret);return i(NSS.get_Keylog_Dump("SERVER_HANDSHAKE_TRAFFIC_SECRET",S,_)),r.keylog=NSS.get_Keylog_Dump("SERVER_HANDSHAKE_TRAFFIC_SECRET",S,_),void send(r)}if(2==t){i("[*] exporting TLS 1.3 RTT0 handshake keying material");var l=NSS.get_Secret_As_HexString(s.hs.clientEarlyTrafficSecret);return i(NSS.get_Keylog_Dump("CLIENT_EARLY_TRAFFIC_SECRET",S,l)),r.keylog=NSS.get_Keylog_Dump("CLIENT_EARLY_TRAFFIC_SECRET",S,l),send(r),void(NSS.doTLS13_RTT0=1)}var c=NSS.get_SSL_Version(e);if(NSS.is_TLS_1_3(c)){i("[*] exporting TLS 1.3 keying material");var g=NSS.get_Secret_As_HexString(s.hs.clientTrafficSecret);i(NSS.get_Keylog_Dump("CLIENT_TRAFFIC_SECRET_0",S,g)),r.keylog=NSS.get_Keylog_Dump("CLIENT_TRAFFIC_SECRET_0",S,g),send(r);var p=NSS.get_Secret_As_HexString(s.hs.serverTrafficSecret);i(NSS.get_Keylog_Dump("SERVER_TRAFFIC_SECRET_0",S,p)),r.keylog=NSS.get_Keylog_Dump("SERVER_TRAFFIC_SECRET_0",S,p),send(r);var N=NSS.get_Secret_As_HexString(s.hs.exporterSecret);i(NSS.get_Keylog_Dump("EXPORTER_SECRET",S,N)),r.keylog=NSS.get_Keylog_Dump("EXPORTER_SECRET",S,N),send(r)}else{i("[*] exporting TLS 1.2 keying material");var u=NSS.getMasterSecret(s);i(NSS.get_Keylog_Dump("CLIENT_RANDOM",S,u)),r.keylog=NSS.get_Keylog_Dump("CLIENT_RANDOM",S,u),send(r)}NSS.doTLS13_RTT0=-1}}static ssl_RecordKeyLog(e){NSS.getTLS_Keys(e,0)}install_plaintext_read_hook(){var e=this.module_name,t=this.addresses;Interceptor.attach(this.addresses[this.moduleName].PR_Read,{onEnter:function(e){this.fd=ptr(e[0]),this.buf=ptr(e[1])},onLeave:function(r){if(!(r.toInt32()<=0||NSS.getDescType(this.fd)==PRDescType.PR_DESC_FILE)){s("The results of NSS and its PR_Read is likely not the information transmitted over the wire. Better do a full capture and just log the TLS keys");var a=Memory.alloc(8);NSS.getpeername(this.fd,a);if(2==a.readU16()||10==a.readU16()||100==a.readU16()){var d=NSS.getPortsAndAddressesFromNSS(this.fd,!0,t[e],n);i("Session ID: "+NSS.getSslSessionIdFromFD(this.fd)),d.ssl_session_id=NSS.getSslSessionIdFromFD(this.fd),d.function="NSS_read",this.message=d,this.message.contentType="datalog";var S=this.buf.readByteArray(new Uint32Array([r])[0]);send(d,S)}else{(d=NSS.getPortsAndAddressesFromNSS(null,!0,t[e],n)).ssl_session_id=NSS.getSslSessionIdFromFD(this.fd),d.function="NSS_read",this.message=d,this.message.contentType="datalog";var o=this.buf.readByteArray(new Uint32Array([r])[0]);i(JSON.stringify(o)),send(d,o)}}}})}install_plaintext_write_hook(){var e=this.module_name,t=this.addresses;Interceptor.attach(this.addresses[this.moduleName].PR_Write,{onEnter:function(e){this.fd=ptr(e[0]),this.buf=e[1],this.len=e[2]},onLeave:function(r){if(!(r.toInt32()<=0)){var a=Memory.alloc(8);if(NSS.getsockname(this.fd,a),2==a.readU16()||10==a.readU16()||100==a.readU16()){(d=NSS.getPortsAndAddressesFromNSS(this.fd,!1,t[e],n)).ssl_session_id=NSS.getSslSessionIdFromFD(this.fd),d.function="NSS_write",d.contentType="datalog",send(d,this.buf.readByteArray(parseInt(this.len)))}else{var d;s("The results of NSS and its PR_Write is likely not the information transmitted over the wire. Better do a full capture and just log the TLS keys"),(d=NSS.getPortsAndAddressesFromNSS(null,!0,t[e],n)).ssl_session_id=NSS.getSslSessionIdFromFD(this.fd),d.function="NSS_write",this.message=d,this.message.contentType="datalog";var S=this.buf.readByteArray(new Uint32Array([r])[0]);i(JSON.stringify(S)),send(d,S)}}}})}static parse_epoch_value_from_SSL_SetSecretCallback(e,t){if(1==t)NSS.getTLS_Keys(e,2);else if(2==t)NSS.getTLS_Keys(e,1);else{if(t>=3)return;i("[-] secret_callback invocation: UNKNOWN")}}static insert_hook_into_secretCallback(e){Interceptor.attach(e,{onEnter(e){this.sslSocketFD=e[0],this.epoch=e[1],NSS.parse_epoch_value_from_SSL_SetSecretCallback(this.sslSocketFD,this.epoch)},onLeave(e){}})}static register_secret_callback(e){var t=NSS.get_SSL_FD(e);if(t.isNull())i("[-] error while installing secret callback: unable get SSL socket descriptor");else{var r=NSS.parse_struct_sslSocketStr(t);1==NSS.is_ptr_at_mem_location(r.secretCallback.readPointer())?NSS.insert_hook_into_secretCallback(r.secretCallback.readPointer()):r.secretCallback.writePointer(NSS.secret_callback),i("[**] secret callback ("+NSS.secret_callback+") installed to address: "+r.secretCallback)}}install_tls_keys_callback_hook(){}}NSS.doTLS13_RTT0=-1,NSS.SSL3_RANDOM_LENGTH=32,NSS.keylog_callback=new NativeCallback((function(e,t){return void 0!==this?NSS.ssl_RecordKeyLog(e):console.log("[-] Error while installing ssl_RecordKeyLog() callback"),0}),"void",["pointer","pointer"]),NSS.secret_callback=new NativeCallback((function(e,t,r,a,d){void 0!==this?NSS.parse_epoch_value_from_SSL_SetSecretCallback(e,t):console.log("[-] Error while installing parse_epoch_value_from_SSL_SetSecretCallback()")}),"void",["pointer","uint16","uint16","pointer","pointer"]);
âœ„
import{readAddresses as e,getPortsAndAddresses as t,getBaseAddress as i}from"../shared/shared_functions.js";import{offsets as s,enable_default_fd as o}from"../ssl_log.js";import{devlog as n,log as r}from"../util/log.js";class a{constructor(){this.readModification=null,this.writeModification=null,this.listenForReadMod(),this.listenForWriteMod()}listenForReadMod(){recv("readmod",(e=>{this.readModification=null!=e.payload?new Uint8Array(e.payload.match(/[\da-f]{2}/gi).map((function(e){return parseInt(e,16)}))).buffer:null,this.listenForReadMod()}))}listenForWriteMod(){recv("writemod",(e=>{this.writeModification=null!=e.payload?new Uint8Array(e.payload.match(/[\da-f]{2}/gi).map((function(e){return parseInt(e,16)}))).buffer:null,this.listenForWriteMod()}))}get readmod(){return this.readModification}get writemod(){return this.writeModification}set readmod(e){this.readModification=e}set writemod(e){this.writeModification=e}}export class OpenSSL_BoringSSL{constructor(t,o,n,d){if(this.moduleName=t,this.socket_library=o,this.passed_library_method_mapping=d,this.library_method_mapping={},OpenSSL_BoringSSL.modReceiver=new a,global.global_counter++,void 0!==d?this.library_method_mapping=d:(this.library_method_mapping[`*${t}*`]=["SSL_read","SSL_write","SSL_get_fd","SSL_get_session","SSL_SESSION_get_id","SSL_new","SSL_do_handshake","SSL_CTX_set_keylog_callback"],this.library_method_mapping[`*${o}*`]=["getpeername","getsockname","ntohs","ntohl"]),this.is_base_hook=n,this.addresses=e(t,this.library_method_mapping),this.module_name=t,"{OFFSETS}"!=s&&null!=s.openssl){if(null!=s.sockets){const e=i(o);for(const t of Object.keys(s.sockets))this.addresses[this.moduleName][`${t}`]=s.sockets[`${t}`].absolute||null==e?ptr(s.sockets[`${t}`].address):e.add(ptr(s.sockets[`${t}`].address))}const e=i(t);null==e&&r("Unable to find library base address! Given address values will be interpreted as absolute ones!");for(const t of Object.keys(s.openssl))this.addresses[this.moduleName][`${t}`]=s.openssl[`${t}`].absolute||null==e?ptr(s.openssl[`${t}`].address):e.add(ptr(s.openssl[`${t}`].address))}this.SSL_SESSION_get_id=new NativeFunction(this.addresses[this.moduleName].SSL_SESSION_get_id,"pointer",["pointer","pointer"]),this.SSL_get_fd=ObjC.available?new NativeFunction(this.addresses[this.moduleName].BIO_get_fd,"int",["pointer"]):new NativeFunction(this.addresses[this.moduleName].SSL_get_fd,"int",["pointer"]),this.SSL_get_session=new NativeFunction(this.addresses[this.moduleName].SSL_get_session,"pointer",["pointer"])}install_plaintext_read_hook(){var e=this.addresses,i=this,s=this.module_name;Interceptor.attach(this.addresses[this.moduleName].SSL_read,{onEnter:function(n){if(this.bufLen=n[2].toInt32(),this.fd=i.SSL_get_fd(n[0]),!(this.fd<0&&0==o)){var r=t(this.fd,!0,e[s],o);r.ssl_session_id=i.getSslSessionId(n[0]),r.function="SSL_read",this.message=r,this.buf=n[1]}},onLeave:function(e){(e|=0)<=0||this.fd<0||(null!==OpenSSL_BoringSSL.modReceiver.readmod&&(Memory.writeByteArray(this.buf,new Uint8Array(this.bufLen)),Memory.writeByteArray(this.buf,OpenSSL_BoringSSL.modReceiver.readmod),e=OpenSSL_BoringSSL.modReceiver.readmod.byteLength),this.message.contentType="datalog",send(this.message,this.buf.readByteArray(e)))}})}install_plaintext_write_hook(){var e=this.module_name,i=this.addresses,s=this;Interceptor.attach(this.addresses[this.moduleName].SSL_write,{onEnter:function(n){if(!ObjC.available){try{this.fd=s.SSL_get_fd(n[0])}catch(e){if(this.is_base_hook)e instanceof Error?(console.log("Error: "+e.message),console.log("Stack: "+e.stack)):console.log("Unexpected error:",e);else{const e=global.init_addresses;let t=Object.keys(e)[0];s.SSL_SESSION_get_id=new NativeFunction(e[t].SSL_SESSION_get_id,"pointer",["pointer","pointer"]),s.SSL_get_fd=ObjC.available?new NativeFunction(e[t].BIO_get_fd,"int",["pointer"]):new NativeFunction(e.SSL_get_fd,"int",["pointer"]),s.SSL_get_session=new NativeFunction(e[t].SSL_get_session,"pointer",["pointer"])}}if(this.fd<0&&0==o)return;var r=t(this.fd,!1,i[e],o);if(r.ssl_session_id=s.getSslSessionId(n[0]),r.function="SSL_write",r.contentType="datalog",null!==OpenSSL_BoringSSL.modReceiver.writemod){const e=Memory.alloc(OpenSSL_BoringSSL.modReceiver.writemod.byteLength);Memory.writeByteArray(e,OpenSSL_BoringSSL.modReceiver.writemod),n[1]=e,n[2]=new NativePointer(OpenSSL_BoringSSL.modReceiver.writemod.byteLength)}send(r,n[1].readByteArray(n[2].toInt32()))}},onLeave:function(e){}})}install_tls_keys_callback_hook(){r("Error: TLS key extraction not implemented yet.")}getSslSessionId(e){var t=this.SSL_get_session(e);if(t.isNull())return o?(r("using dummy SessionID: 59FD71B7B90202F359D89E66AE4E61247954E28431F6C6AC46625D472FF76336"),"59FD71B7B90202F359D89E66AE4E61247954E28431F6C6AC46625D472FF76336"):(r("Session is null"),0);for(var i=Memory.alloc(4),s=this.SSL_SESSION_get_id(t,i),n=i.readU32(),a="",d=0;d<n;d++)a+=("0"+s.add(d).readU8().toString(16).toUpperCase()).substr(-2);return a}}OpenSSL_BoringSSL.keylog_callback=new NativeCallback((function(e,t){n("invoking keylog_callback from OpenSSL_BoringSSL");var i={contentType:"keylog"};i.keylog=t.readCString(),send(i)}),"void",["pointer","pointer"]);
âœ„
import{readAddresses as s,getPortsAndAddresses as e,getBaseAddress as t}from"../shared/shared_functions.js";import{log as o}from"../util/log.js";import{offsets as l,enable_default_fd as i}from"../ssl_log.js";export class WolfSSL{constructor(e,i,a){if(this.moduleName=e,this.socket_library=i,this.passed_library_method_mapping=a,this.library_method_mapping={},void 0!==a?this.library_method_mapping=a:(this.library_method_mapping[`*${e}*`]=["wolfSSL_read","wolfSSL_write","wolfSSL_get_fd","wolfSSL_get_session","wolfSSL_connect","wolfSSL_KeepArrays","wolfSSL_SESSION_get_master_key","wolfSSL_get_client_random","wolfSSL_get_server_random"],this.library_method_mapping[`*${i}*`]=["getpeername","getsockname","ntohs","ntohl"]),this.addresses=s(e,this.library_method_mapping),this.module_name=e,"{OFFSETS}"!=l&&null!=l.wolfssl){if(null!=l.sockets){const s=t(i);for(const e of Object.keys(l.sockets))this.addresses[this.moduleName][`${e}`]=l.sockets[`${e}`].absolute||null==s?ptr(l.sockets[`${e}`].address):s.add(ptr(l.sockets[`${e}`].address))}const s=t(e);null==s&&o("Unable to find library base address! Given address values will be interpreted as absolute ones!");for(const e of Object.keys(l.wolfssl))this.addresses[this.moduleName][`${e}`]=l.wolfssl[`${e}`].absolute||null==s?ptr(l.wolfssl[`${e}`].address):s.add(ptr(l.wolfssl[`${e}`].address))}WolfSSL.wolfSSL_get_fd=new NativeFunction(this.addresses[this.moduleName].wolfSSL_get_fd,"int",["pointer"]),WolfSSL.wolfSSL_get_session=new NativeFunction(this.addresses[this.moduleName].wolfSSL_get_session,"pointer",["pointer"])}install_tls_keys_callback_hook(){o("Error: TLS key extraction not implemented yet.")}static getSslSessionId(s){var e=WolfSSL.wolfSSL_get_session(s);if(e.isNull())return i?(o("using dummy SessionID: 59FD71B7B90202F359D89E66AE4E61247954E28431F6C6AC46625D472FF76338"),"59FD71B7B90202F359D89E66AE4E61247954E28431F6C6AC46625D472FF76338"):(o("Session is null"),0);for(var t=e.add(8),l="",a=0;a<32;a++)l+=("0"+t.add(a).readU8().toString(16).toUpperCase()).substr(-2);return l}install_plaintext_read_hook(){var s=this.module_name,t=this.addresses;Interceptor.attach(this.addresses[this.moduleName].wolfSSL_read,{onEnter:function(o){var l=e(WolfSSL.wolfSSL_get_fd(o[0]),!0,t[s],i);l.function="wolfSSL_read",l.ssl_session_id=WolfSSL.getSslSessionId(o[0]),this.message=l,this.buf=o[1]},onLeave:function(s){(s|=0)<=0||(this.message.contentType="datalog",send(this.message,this.buf.readByteArray(s)))}})}install_plaintext_write_hook(){var s=this.module_name,t=this.addresses;Interceptor.attach(this.addresses[this.moduleName].wolfSSL_write,{onEnter:function(o){var l=e(WolfSSL.wolfSSL_get_fd(o[0]),!1,t[s],i);l.ssl_session_id=WolfSSL.getSslSessionId(o[0]),l.function="wolfSSL_write",l.contentType="datalog",send(l,o[1].readByteArray(parseInt(o[2])))},onLeave:function(s){}})}}
âœ„
import{load_android_hooking_agent as t}from"./android/android_agent.js";import{load_ios_hooking_agent as o}from"./ios/ios_agent.js";import{load_macos_hooking_agent as n}from"./macos/macos_agent.js";import{load_linux_hooking_agent as r}from"./linux/linux_agent.js";import{load_windows_hooking_agent as e}from"./windows/windows_agent.js";import{isWindows as i,isLinux as a,isAndroid as p,isiOS as s,isMacOS as l}from"./util/process_infos.js";import{anti_root_execute as f}from"./util/anti_root.js";import{log as m}from"./util/log.js";global.init_addresses={},global.global_counter=0;export let offsets="{OFFSETS}";export let experimental=!1;export let anti_root=!1;export let enable_default_fd=!1;send("defaultFD");recv("defaultFD",(t=>{enable_default_fd=t.payload})).wait(),send("experimental");recv("experimental",(t=>{experimental=t.payload})).wait(),send("anti");recv("antiroot",(t=>{anti_root=t.payload})).wait();export function getOffsets(){return offsets}i()?(m("Running Script on Windows"),e()):p()?(m("Running Script on Android"),anti_root&&(m("Applying anti root checks"),f()),t()):a()?(m("Running Script on Linux"),r()):s()?(m("Running Script on iOS"),o()):l()?(m("Running Script on MacOS"),n()):(m("Running Script on unknown plattform"),m("Error: not supported plattform!\nIf you want to have support for this plattform please make an issue at our github page."));
âœ„
import{log as e,devlog as a}from"./log.js";import{readAddresses as o}from"../shared/shared_functions.js";export class AntiRoot{constructor(){for(var e in this.RootPackages=["com.noshufou.android.su","com.noshufou.android.su.elite","eu.chainfire.supersu","com.koushikdutta.superuser","com.thirdparty.superuser","com.yellowes.su","com.koushikdutta.rommanager","com.koushikdutta.rommanager.license","com.dimonvideo.luckypatcher","com.chelpus.lackypatch","com.ramdroid.appquarantine","com.ramdroid.appquarantinepro","com.devadvance.rootcloak","com.devadvance.rootcloakplus","de.robv.android.xposed.installer","com.saurik.substrate","com.zachspong.temprootremovejb","com.amphoras.hidemyroot","com.amphoras.hidemyrootadfree","com.formyhm.hiderootPremium","com.formyhm.hideroot","me.phh.superuser","eu.chainfire.supersu.pro","com.kingouser.com","com.topjohnwu.magisk"],this.RootBinaries=["su","busybox","supersu","Superuser.apk","KingoUser.apk","SuperSu.apk","magisk"],this.RootProperties={"ro.build.selinux":"1","ro.debuggable":"0","service.adb.root":"0","ro.secure":"1"},this.RootPropertiesKeys=[],this.library_method_mapping={},this.library_method_mapping["libc.so"]=["strstr","fopen","system"],this.module_name="libc.so",this.addresses=o(this.module_name,this.library_method_mapping),this.RootProperties)this.RootPropertiesKeys.push(e)}java_based_bypasses(){Java.perform((function(){var o=Java.use("android.app.ApplicationPackageManager"),t=Java.use("java.lang.Runtime"),r=(Java.use("java.io.File"),Java.use("java.lang.String")),i=Java.use("android.os.SystemProperties"),s=Java.use("java.io.BufferedReader"),n=Java.use("java.lang.ProcessBuilder"),l=(Java.use("java.lang.StringBuffer"),!1),d=!1,c=NULL,u=Java.enumerateLoadedClassesSync();if(a("Loaded "+u.length+" classes!"),a("loaded: "+u.indexOf("java.lang.ProcessManager")),-1!=u.indexOf("java.lang.ProcessManager"))try{d=!0,c=Java.use("java.lang.ProcessManager")}catch(e){a("ProcessManager Hook failed: "+e)}else a("ProcessManager hook not loaded");var p=NULL;if(-1!=u.indexOf("android.security.keystore.KeyInfo"))try{l=!0,p=Java.use("android.security.keystore.KeyInfo")}catch(a){e("KeyInfo Hook failed: "+a)}else e("KeyInfo hook not loaded");o.getPackageInfo.overload("java.lang.String","int").implementation=function(a,o){return this.RootPackages.indexOf(a)>-1&&(e("Bypass root check for package: "+a),a="set.package.name.to.a.fake.one.so.we.can.bypass.it"),this.getPackageInfo.overload("java.lang.String","int").call(this,a,o)};var m=t.exec.overload("[Ljava.lang.String;"),h=t.exec.overload("java.lang.String"),f=t.exec.overload("java.lang.String","[Ljava.lang.String;"),g=t.exec.overload("[Ljava.lang.String;","[Ljava.lang.String;"),v=t.exec.overload("[Ljava.lang.String;","[Ljava.lang.String;","java.io.File"),y=t.exec.overload("java.lang.String","[Ljava.lang.String;","java.io.File");y.implementation=function(a,o,t){if(-1!=a.indexOf("getprop")||"mount"==a||-1!=a.indexOf("build.prop")||"id"==a||"sh"==a){var r="grep";return e("Bypass "+a+" command"),h.call(this,r)}if("su"==a){r="awesome_tool";return e("Bypass "+a+" command"),h.call(this,r)}return y.call(this,a,o,t)},v.implementation=function(a,o,t){for(var r=0;r<a.length;r+=1){var i=a[r];if(-1!=i.indexOf("getprop")||"mount"==i||-1!=i.indexOf("build.prop")||"id"==i||"sh"==i){var s="grep";return e("Bypass "+a+" command"),h.call(this,s)}if("su"==i){s="awesome_tool";return e("Bypass "+a+" command"),h.call(this,s)}}return v.call(this,a,o,t)},g.implementation=function(a,o){for(var t=0;t<a.length;t+=1){var r=a[t];if(-1!=r.indexOf("getprop")||"mount"==r||-1!=r.indexOf("build.prop")||"id"==r||"sh"==r){var i="grep";return e("Bypass "+a+" command"),h.call(this,i)}if("su"==r){i="awesome_tool";return e("Bypass "+a+" command"),h.call(this,i)}}return g.call(this,a,o)},f.implementation=function(a,o){if(-1!=a.indexOf("getprop")||"mount"==a||-1!=a.indexOf("build.prop")||"id"==a||"sh"==a){var t="grep";return e("Bypass "+a+" command"),h.call(this,t)}if("su"==a){t="awesome_tool";return e("Bypass "+a+" command"),h.call(this,t)}return f.call(this,a,o)},m.implementation=function(a){for(var o=0;o<a.length;o+=1){var t=a[o];if(-1!=t.indexOf("getprop")||"mount"==t||-1!=t.indexOf("build.prop")||"id"==t||"sh"==t){var r="grep";return e("Bypass "+a+" command"),h.call(this,r)}if("su"==t){r="awesome_tool";return e("Bypass "+a+" command"),h.call(this,r)}}return m.call(this,a)},h.implementation=function(a){if(-1!=a.indexOf("getprop")||"mount"==a||-1!=a.indexOf("build.prop")||"id"==a||"sh"==a){var o="grep";return e("Bypass "+a+" command"),h.call(this,o)}if("su"==a){o="awesome_tool";return e("Bypass "+a+" command"),h.call(this,o)}return h.call(this,a)},r.contains.implementation=function(a){return"test-keys"==a?(e("Bypass test-keys check"),!1):this.contains.call(this,a)},i.get.overload("java.lang.String").implementation=function(a){return-1!=this.RootPropertiesKeys.indexOf(a)?(e("Bypass "+a),this.RootProperties[a]):this.get.call(this,a)},s.readLine.overload("boolean").implementation=function(){var a=this.readLine.overload("boolean").call(this);null===a||a.indexOf("ro.build.tags=test-keys")>-1&&(e("Bypass build.prop file read"),a=a.replace("ro.build.tags=test-keys","ro.build.tags=release-keys"));return a};n.command.overload("java.util.List");if(n.start.implementation=function(){for(var a=this.command.call(this),o=!1,t=0;t<a.size();t+=1){var r=a.get(t).toString();-1==r.indexOf("getprop")&&-1==r.indexOf("mount")&&-1==r.indexOf("build.prop")&&-1==r.indexOf("id")||(o=!0)}return o?(e("Bypass ProcessBuilder "+a),this.command.call(this,["grep"]),this.start.call(this)):-1!=a.indexOf("su")?(e("Bypass ProcessBuilder "+a),this.command.call(this,["awesome_tool"]),this.start.call(this)):this.start.call(this)},d){var x=c.exec.overload("[Ljava.lang.String;","[Ljava.lang.String;","java.io.File","boolean"),k=c.exec.overload("[Ljava.lang.String;","[Ljava.lang.String;","java.lang.String","java.io.FileDescriptor","java.io.FileDescriptor","java.io.FileDescriptor","boolean");x.implementation=function(a,o,t,r){for(var i=a,s=0;s<a.length;s+=1){var n=a[s];if(-1!=n.indexOf("getprop")||"mount"==n||-1!=n.indexOf("build.prop")||"id"==n){i=["grep"];e("Bypass "+a+" command")}if("su"==n){i=["awesome_tool"];e("Bypass "+a+" command")}}return x.call(this,i,o,t,r)},k.implementation=function(a,o,t,r,i,s,n){for(var l=a,d=0;d<a.length;d+=1){var c=a[d];if(-1!=c.indexOf("getprop")||"mount"==c||-1!=c.indexOf("build.prop")||"id"==c){l=["grep"];e("Bypass "+a+" command")}if("su"==c){l=["awesome_tool"];e("Bypass "+a+" command")}}return k.call(this,l,o,t,r,i,s,n)}}l&&(p.isInsideSecureHardware.implementation=function(){return e("Bypass isInsideSecureHardware"),!0})}))}native_based_bypasses(){Interceptor.attach(this.addresses[this.module_name].strstr,{onEnter:function(e){this.str_source=e[0],this.str_to_look_for=e[1],this.frida=Boolean(0);var a=this.str_source.readUtf8String();this.str_to_look_for.readUtf8String();-1==a.indexOf("frida")&&-1==a.indexOf("xposed")||(this.frida=Boolean(1))},onLeave:function(e){return this.frida&&e.replace(ptr(0)),e}}),Interceptor.attach(this.addresses[this.module_name].fopen,{onEnter:function(a){var o=a[0].readCString().split("/"),t=o[o.length-1];this.RootBinaries.indexOf(t)>-1&&(a[0].writeUtf8String("/notexists"),e("Bypass native fopen"))},onLeave:function(e){}}),Interceptor.attach(this.addresses[this.module_name].system,{onEnter:function(a){var o=a[0].readCString();e("SYSTEM CMD: "+o),-1==o.indexOf("getprop")&&"mount"!=o&&-1==o.indexOf("build.prop")&&"id"!=o||(e("Bypass native system: "+o),a[0].writeUtf8String("grep")),"su"==o&&(e("Bypass native system: "+o),a[0].writeUtf8String("awesome_tool"))},onLeave:function(e){}})}execute_hooks(){this.java_based_bypasses(),this.native_based_bypasses()}}export function anti_root_execute(){(new AntiRoot).execute_hooks()}
âœ„
export function log(o){var e={contentType:"console"};e.console=o,send(e)}export function devlog(o){var e={contentType:"console_dev"};e.console_dev=o,send(e)}
âœ„
export function get_process_architecture(){return Process.arch}export function isAndroid(){if(!Java.available||"linux"!=Process.platform)return!1;try{return Java.androidVersion,!0}catch(r){return!1}}export function isiOS(){if("arm64"!==get_process_architecture()||"darwin"!=Process.platform)return!1;try{return!0}catch(r){return!1}}export function isMacOS(){return"x64"===get_process_architecture()&&"darwin"==Process.platform}export function isLinux(){if("linux"!=Process.platform)return!1;if(0==Java.available&&"linux"==Process.platform)return!0;try{return Java.androidVersion,!1}catch(r){return!0}}export function isWindows(){return"windows"==Process.platform}export function getAndroidVersion(){var r="-1";return Java.perform((function(){r=Java.androidVersion})),+r}
âœ„
import{GnuTLS as s}from"../ssl_lib/gnutls.js";import{socket_library as t}from"./windows_agent.js";export class GnuTLS_Windows extends s{constructor(s,t,e){super(s,t),this.moduleName=s,this.socket_library=t}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook()}install_tls_keys_callback_hook(){}}export function gnutls_execute(s,e){var o=new GnuTLS_Windows(s,t,e);if(o.execute_hooks(),e){const t=o.addresses[s];Object.keys(t).length>0&&(global.init_addresses[s]=t)}}
âœ„
import{matrix_SSL as s}from"../ssl_lib/matrixssl.js";import{socket_library as t}from"./windows_agent.js";export class matrix_SSL_Windows extends s{constructor(s,t,e){super(s,t),this.moduleName=s,this.socket_library=t}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook(),this.install_helper_hook()}install_tls_keys_callback_hook(){}}export function matrixSSL_execute(s,e){var o=new matrix_SSL_Windows(s,t,e);if(o.execute_hooks(),e){const t=o.addresses[s];Object.keys(t).length>0&&(global.init_addresses[s]=t)}}
âœ„
import{mbed_TLS as e}from"../ssl_lib/mbedTLS.js";import{socket_library as s}from"./windows_agent.js";export class mbed_TLS_Windows extends e{constructor(e,s,t){super(e,s),this.moduleName=e,this.socket_library=s}install_tls_keys_callback_hook(){}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook()}}export function mbedTLS_execute(e,t){var o=new mbed_TLS_Windows(e,s,t);if(o.execute_hooks(),t){const s=o.addresses[e];Object.keys(s).length>0&&(global.init_addresses[e]=s)}}
âœ„
import{NSS as e}from"../ssl_lib/nss.js";import{socket_library as s}from"./windows_agent.js";export class NSS_Windows extends e{constructor(e,s,t){var o={};o[`*${e}*`]=["PR_Write","PR_Read","PR_FileDesc2NativeHandle","PR_GetPeerName","PR_GetSockName","PR_GetNameForIdentity"],o["*ssl*.dll"]=["SSL_ImportFD","SSL_GetSessionID","SSL_HandshakeCallback"],super(e,s,o),this.moduleName=e,this.socket_library=s}install_tls_keys_callback_hook(){}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook()}}export function nss_execute(e,t){var o=new NSS_Windows(e,s,t);if(o.execute_hooks(),t){const s=o.addresses[e];Object.keys(s).length>0&&(global.init_addresses[e]=s)}}
âœ„
import{OpenSSL_BoringSSL as e}from"../ssl_lib/openssl_boringssl.js";import{socket_library as s}from"./windows_agent.js";export class OpenSSL_BoringSSL_Windows extends e{constructor(e,s,t){let o={};o[`${e}`]=["SSL_read","SSL_write","SSL_get_fd","SSL_get_session","SSL_SESSION_get_id","SSL_new"],o[`*${s}*`]=["getpeername","getsockname","ntohs","ntohl"],super(e,s,t,o),this.moduleName=e,this.socket_library=s}install_tls_keys_callback_hook(){}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook()}}export function boring_execute(e,t){var o=new OpenSSL_BoringSSL_Windows(e,s,t);if(o.execute_hooks(),t){const s=o.addresses[e];Object.keys(s).length>0&&(global.init_addresses[e]=s)}}
âœ„
import{readAddresses as e,getBaseAddress as s}from"../shared/shared_functions.js";import{socket_library as t}from"./windows_agent.js";import{devlog as r,log as a}from"../util/log.js";import{experimental as i,offsets as n}from"../ssl_log.js";var d=(e,s)=>{r(`Exporting TLS 1.${s} handshake keying material`);var t={contentType:"keylog"};t.keylog=e,send(t)};export class SSPI_Windows{constructor(t,r,d){if(this.moduleName=t,this.socket_library=r,this.library_method_mapping={},this.library_method_mapping[`*${t}*`]=["DecryptMessage","EncryptMessage"],i&&(a("ncrypt.dll was loaded & will be hooked on Windows!"),this.library_method_mapping["*ncrypt*.dll"]=["SslHashHandshake","SslGenerateMasterKey","SslImportMasterKey","SslGenerateSessionKeys","SslExpandExporterMasterKey","SslExpandTrafficKeys"]),this.library_method_mapping[`*${r}*`]=["getpeername","getsockname","ntohs","ntohl"],this.addresses=e(t,this.library_method_mapping),this.module_name=t,"{OFFSETS}"!=n&&null!=n.sspi){if(null!=n.sockets){const e=s(r);for(const s of Object.keys(n.sockets))this.addresses[this.module_name][`${s}`]=n.sockets[`${s}`].absolute||null==e?ptr(n.sockets[`${s}`].address):e.add(ptr(n.sockets[`${s}`].address))}const e=s(t);null==e&&a("Unable to find library base address! Given address values will be interpreted as absolute ones!");for(const s of Object.keys(n.sspi))this.addresses[this.module_name][`${s}`]=n.sspi[`${s}`].absolute||null==e?ptr(n.sspi[`${s}`].address):e.add(ptr(n.sspi[`${s}`].address))}}install_plaintext_read_hook(){Interceptor.attach(this.addresses[this.module_name].DecryptMessage,{onEnter:function(e){this.pMessage=e[1]},onLeave:function(){this.cBuffers=this.pMessage.add(4).readULong(),this.pBuffers=this.pMessage.add(8).readPointer(),this.secBuffers=[];for(let s=0;s<this.cBuffers;s++){var e=this.pBuffers.add(16*s);this.secBuffers.push(e)}for(let e=0;e<this.secBuffers.length;e++){var s=this.secBuffers[e].add(0).readULong(),t=this.secBuffers[e].add(4).readULong(),r=this.secBuffers[e].add(8).readPointer();if(1==t){var a=r.readByteArray(s),i={ss_family:"AF_INET",src_port:444,src_addr:222,dst_port:443,dst_addr:222,function:"DecryptMessage",contentType:"datalog",ssl_session_id:10};send(i,a)}}}})}install_plaintext_write_hook(){Interceptor.attach(this.addresses[this.module_name].EncryptMessage,{onEnter:function(e){this.pMessage=e[2],this.cBuffers=this.pMessage.add(4).readULong(),this.pBuffers=this.pMessage.add(8).readPointer(),this.secBuffers=[];for(let e=0;e<this.cBuffers;e++){var s=this.pBuffers.add(16*e);this.secBuffers.push(s)}for(let e=0;e<this.secBuffers.length;e++){var t=this.secBuffers[e].add(0).readULong(),r=this.secBuffers[e].add(4).readULong(),a=this.secBuffers[e].add(8).readPointer();if(1==r){var i=a.readByteArray(t),n={ss_family:"AF_INET",src_port:443,src_addr:222,dst_port:444,dst_addr:222,function:"EncryptMessage",contentType:"datalog",ssl_session_id:10};send(n,i)}}}})}install_tls_keys_hook(){var e={},s=function(e){return Array.prototype.map.call(new Uint8Array(e),(function(e){return("00"+e.toString(16)).slice(-2)})).join("")},t=function(e){var t=e.add(16).readPointer().add(28).readByteArray(48);return s(t)},a=function(e,t){for(var a=e.add(4).readU32(),i=e.add(8).readPointer(),n=0;n<a;n++){var d=i.add(16*n),o=d.readU32(),h=d.add(4).readU32(),l=d.add(8).readPointer().readByteArray(o);if(20==h)return r("Got client random from "+t+"'s pParameterList: "+s(l)),s(l)}return null};null!=this.addresses[this.module_name].SslHashHandshake&&Interceptor.attach(this.addresses[this.module_name].SslHashHandshake,{onEnter:function(t){var a=ptr(t[2]),i=t[3].toInt32(),n=(a.readByteArray(i),a.readU8()),d=a.add(4).readU16();if(1==n&&771==d){var o=s(a.add(6).readByteArray(32));r("Got client random from SslHashHandshake: "+o),e[this.threadId]=o}},onLeave:function(e){}}),null!=this.addresses[this.module_name].SslGenerateMasterKey&&Interceptor.attach(this.addresses[this.module_name].SslGenerateMasterKey,{onEnter:function(s){this.phMasterKey=ptr(s[3]),this.hSslProvider=ptr(s[0]),this.pParameterList=ptr(s[6]),this.client_random=a(this.pParameterList,"SslGenerateMasterKey")||e[this.threadId]||"???"},onLeave:function(e){var s=t(this.phMasterKey.readPointer());r("Got masterkey from SslGenerateMasterKey"),d("CLIENT_RANDOM "+this.client_random+" "+s,2)}}),null!=this.addresses[this.module_name].SslImportMasterKey&&Interceptor.attach(this.addresses[this.module_name].SslImportMasterKey,{onEnter:function(s){this.phMasterKey=ptr(s[2]),this.pParameterList=ptr(s[5]),this.client_random=a(this.pParameterList,"SslImportMasterKey")||e[this.threadId]||"???"},onLeave:function(e){var s=t(this.phMasterKey.readPointer());r("[*] Got masterkey from SslImportMasterKey"),d("CLIENT_RANDOM "+this.client_random+" "+s,2)}}),null!=this.addresses[this.module_name].SslGenerateSessionKeys&&Interceptor.attach(this.addresses[this.module_name].SslGenerateSessionKeys,{onEnter:function(s){this.hMasterKey=ptr(s[1]),this.hSslProvider=ptr(s[0]),this.pParameterList=ptr(s[4]),this.client_random=a(this.pParameterList,"SslGenerateSessionKeys")||e[this.threadId]||"???";var i=t(this.hMasterKey);r("Got masterkey from SslGenerateSessionKeys"),d("CLIENT_RANDOM "+this.client_random+" "+i,2)},onLeave:function(e){}});var i={},n=function(e){var s=e.add(16).readPointer().add(32).readPointer().add(16).readPointer(),t=s.add(24).readPointer(),r=s.add(16).readU32();return t.readByteArray(r)};null!=this.addresses[this.module_name].SslExpandTrafficKeys&&Interceptor.attach(this.addresses[this.module_name].SslExpandTrafficKeys,{onEnter:function(s){this.retkey1=ptr(s[3]),this.retkey2=ptr(s[4]),this.client_random=e[this.threadId]||"???",i[this.threadId]?(i[this.threadId]=null,this.suffix="TRAFFIC_SECRET_0"):(i[this.threadId]="handshake",this.suffix="HANDSHAKE_TRAFFIC_SECRET")},onLeave:function(e){var t=n(this.retkey1.readPointer()),r=n(this.retkey2.readPointer());d("CLIENT_"+this.suffix+" "+this.client_random+" "+s(t),3),d("SERVER_"+this.suffix+" "+this.client_random+" "+s(r),3)}}),null!=this.addresses[this.module_name].SslExpandExporterMasterKey&&Interceptor.attach(this.addresses[this.module_name].SslExpandExporterMasterKey,{onEnter:function(s){this.retkey=ptr(s[3]),this.client_random=e[this.threadId]||"???"},onLeave:function(e){var t=this.retkey.readPointer().add(16).readPointer().add(32).readPointer().add(16).readPointer().add(24).readPointer().readByteArray(48);d("EXPORTER_SECRET "+this.client_random+" "+s(t),3)}})}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook(),i&&this.install_tls_keys_hook()}}export function sspi_execute(e,s){var r=new SSPI_Windows(e,t,s);if(r.execute_hooks(),s){const s=r.addresses[e];Object.keys(s).length>0&&(global.init_addresses[e]=s)}}
âœ„
import{module_library_mapping as o}from"../shared/shared_structures.js";import{log as s,devlog as r}from"../util/log.js";import{getModuleNames as l,ssl_library_loader as i,invokeHookingFunction as e}from"../shared/shared_functions.js";import{sspi_execute as n}from"./sspi.js";import{boring_execute as d}from"./openssl_boringssl_windows.js";import{gnutls_execute as t}from"./gnutls_windows.js";import{mbedTLS_execute as w}from"./mbedTLS_windows.js";import{nss_execute as a}from"./nss_windows.js";import{wolfssl_execute as m}from"./wolfssl_windows.js";import{matrixSSL_execute as p}from"./matrixssl_windows.js";var f=l();export const socket_library="WS2_32.dll";export function load_windows_hooking_agent(){o.windows=[[/^(libssl|LIBSSL)-[0-9]+(_[0-9]+)?\.dll$/,e(d)],[/^.*(wolfssl|WOLFSSL).*\.dll$/,e(m)],[/^.*(libgnutls|LIBGNUTLS)-[0-9]+\.dll$/,e(t)],[/^(nspr|NSPR)[0-9]*\.dll/,e(a)],[/(sspicli|SSPICLI|SspiCli)\.dll$/,e(n)],[/mbedTLS\.dll/,e(w)],["/matrixSSL.dll",e(p)]],function(o,s){i("windows",o,f,"Windows",s)}(o,!0),function(o,l){try{var i=new ApiResolver("module").enumerateMatches("exports:KERNELBASE.dll!*LoadLibraryExW");if(0==i.length)return console.log("[-] Missing windows dynamic loader!");Interceptor.attach(i[0].address,{onLeave(r){let i=(new ModuleMap).findName(r);if(null!==i)for(let r of o.windows){let o=new RegExp(r[0]),e=r[1];o.test(i)&&(s(`${i} was loaded & will be hooked on Windows!`),e(i,l))}}}),console.log("[*] Windows dynamic loader hooked.")}catch(o){r("Loader error: "+o),s("No dynamic loader present for hooking.")}}(o,!1)}
âœ„
import{WolfSSL as e}from"../ssl_lib/wolfssl.js";import{socket_library as o}from"./windows_agent.js";import{log as t}from"../util/log.js";export class WolfSSL_Windows extends e{constructor(e,o,t){let s={};s[`${e}`]=["wolfSSL_read","wolfSSL_write","wolfSSL_get_fd","wolfSSL_get_session","wolfSSL_connect","wolfSSL_KeepArrays"],s[`*${o}*`]=["getpeername","getsockname","ntohs","ntohl"],super(e,o,s),this.moduleName=e,this.socket_library=o}install_tls_keys_callback_hook(){t("Key extraction currently not implemented for windows!")}execute_hooks(){this.install_plaintext_read_hook(),this.install_plaintext_write_hook()}}export function wolfssl_execute(e,t){var s=new WolfSSL_Windows(e,o,t);if(s.execute_hooks(),t){const o=s.addresses[e];Object.keys(o).length>0&&(global.init_addresses[e]=o)}}
âœ„
function o(o,t,a){a.forEach((a=>{a.methods.forEach((e=>{try{const n=e.split("/"),c=n.slice(0,-1).join("/").slice(1),s=n[n.length-1];if(e.startsWith("L"))try{!function(o,t,a,e,n,c){function s(a){const e={message_type:"java_hook_data",type:"dynamic_hook_log",dump:"dynamic_hook.json",data_type:"json",pid:o,process:t,timestamp:Date.now(),data:a};send(e)}const i=Java.use(n),r=i[c].overloads,l=Java.use("java.lang.Exception");r.forEach((o=>{o.implementation=function(){const o=Date.now();try{const t=[].slice.call(arguments),n=this[c].apply(this,arguments),r=l.$new().getStackTrace().toString().split(",");return s({taxonomy_id:a,description:e,timestamp:o,class:i.$className,method:c,arguments:t,returned_value:n||null,stacktrace:r}),n}catch(o){console.log("Hook error",n,c,o)}}}))}(o,t,a.taxonomy_id,a.description,c,s)}catch(o){console.log("Hook injection error",c,e,o)}}catch(o){console.log("Hook injection error",e,o)}}))}))}export function inject_hooks(t,a,e){Java.perform((()=>{o(t,a,e)}))}
âœ„
export function log_ad_ids(){Java.perform((()=>{!function(){try{Java.use("com.google.android.gms.ads.identifier.AdvertisingIdClient").getAdvertisingIdInfo.overload("android.content.Context").implementation=function(t){const n=this.getAdvertisingIdInfo(t),i=n.getId(),d={type:"advertising_id_log",dump:"ad_ids.txt",data_type:"plain",data:i};return console.log(`Advertising ID: ${i}`),send(d),n}}catch(t){}}()}))}
âœ„
export function log_aes_info(t,n){var i=new Array,e=0,a=Java.use("javax.crypto.spec.SecretKeySpec"),o=Java.use("javax.crypto.spec.IvParameterSpec"),r=Java.use("javax.crypto.Cipher"),l=r.doFinal.overload(),s=r.doFinal.overload("[B"),c=r.doFinal.overload("[B","int"),u=r.doFinal.overload("[B","int","int"),p=r.doFinal.overload("[B","int","int","[B"),m=r.doFinal.overload("[B","int","int","[B","int"),d=r.update.overload("[B"),v=r.update.overload("[B","int","int"),h=r.update.overload("[B","int","int","[B"),g=r.update.overload("[B","int","int","[B","int"),f=a.$init.overload("[B","java.lang.String"),y=a.$init.overload("[B","int","int","java.lang.String");o.$init.overload("[B"),o.$init.overload("[B","int","int");function B(a,o,r,l){const s={type:"crypto_traces",dump:"aes_info.json",data_type:"json",pid:t,process:n,timestamp:Date.now(),data:{iv:j(a),alg:o,in:j(r),out:j(l),key:""}};send(s),i=[],e=0}function j(t){return null===t?"":Array.from(t,(function(t){return("0"+(255&t).toString(16)).slice(-2)})).join("")}function _(t){var n,i="";if(null===t)return i;for(var e=0;e<t.length;e++)i+=String.fromCharCode((t[e]%(n=256)+n)%n);return i}function A(t){for(var n=0;n<t.length;n++)i[e]=t[n],e+=1}f.implementation=function(i,e){_(i);const a={type:"crypto_traces",dump:"aes_info.json",data_type:"json",pid:t,process:n,timestamp:Date.now(),data:{iv:"",alg:e,in:"",out:"",key:j(i)}};return send(a),f.call(this,i,e)},y.implementation=function(i,e,a,o){_(i);const r={type:"crypto_traces",dump:"aes_info.json",data_type:"json",pid:t,process:n,timestamp:Date.now(),data:{iv:"",alg:o,in:"",out:"",key:j(i)}};return send(r),y.call(this,i,e,a,o)},l.implementation=function(){var t=l.call(this);return B(this.getIV(),this.getAlgorithm(),i,t),t},s.implementation=function(t){A(t);var n=s.call(this,t);return B(this.getIV(),this.getAlgorithm(),i,n),n},c.implementation=function(t,n){A(t);var e=c.call(this,t,n);return B(this.getIV(),this.getAlgorithm(),i,e),e},u.implementation=function(t,n,e){A(t);var a=u.call(this,t,n,e);return B(this.getIV(),this.getAlgorithm(),i,a),a},p.implementation=function(t,n,e,a){A(t);var o=p.call(this,t,n,e,a);return B(this.getIV(),this.getAlgorithm(),i,o),o},m.implementation=function(t,n,e,a,o){A(t);var r=m.call(this,t,n,e,a,o);return B(this.getIV(),this.getAlgorithm(),i,a),r},d.implementation=function(t){return A(t),d.call(this,t)},v.implementation=function(t,n,i){return A(t),v.call(this,t,n,i)},h.implementation=function(t,n,i,e){return A(t),h.call(this,t,n,i,e)},g.implementation=function(t,n,i,e,a){return A(t),g.call(this,t,n,i,e,a)}}
âœ„
function e(e,t){Process.getModuleByName({linux:"libc.so",darwin:"libSystem.B.dylib",windows:"ws2_32.dll"}[Process.platform]).enumerateExports().filter((e=>"function"===e.type&&["connect","recv","send","read","write"].some((t=>0===e.name.indexOf(t))))).forEach((o=>{Interceptor.attach(o.address,{onEnter:function(n){const s=n[0].toInt32(),a=Socket.type(s);if("tcp"!==a&&"tcp6"!==a&&"udp"!==a&&"udp6"!==a)return;const c=Socket.peerAddress(s);if(null===c)return;const r=Socket.localAddress(s);if(null===r)return;const i={socket_fd:s,socket_type:a,pid:Process.id,thread_id:this.threadId,socket_event_type:o.name,dest_ip:c.ip,dest_port:c.port,local_ip:r.ip,local_port:r.port};if(null!==Java.vm&&null!==Java.vm.tryGetEnv()){const e=Java.use("java.lang.Exception").$new().getStackTrace();i.stack=e.map((e=>({class:e.getClassName(),file:e.getFileName(),line:e.getLineNumber(),method:e.getMethodName(),is_native:e.isNativeMethod(),str:e.toString()})))}!function(o){const n={type:"socket_traces",dump:"socket_trace.json",pid:e,process:t,data_type:"json",timestamp:Date.now(),data:o};send(n)}(i)}})}))}export function socket_trace(t,o){e(t,o)}
âœ„
export function no_root(){Java.perform((function(){var e=["com.noshufou.android.su","com.noshufou.android.su.elite","eu.chainfire.supersu","com.koushikdutta.superuser","com.thirdparty.superuser","com.yellowes.su","com.koushikdutta.rommanager","com.koushikdutta.rommanager.license","com.dimonvideo.luckypatcher","com.chelpus.lackypatch","com.ramdroid.appquarantine","com.ramdroid.appquarantinepro","com.devadvance.rootcloak","com.devadvance.rootcloakplus","de.robv.android.xposed.installer","com.saurik.substrate","com.zachspong.temprootremovejb","com.amphoras.hidemyroot","com.amphoras.hidemyrootadfree","com.formyhm.hiderootPremium","com.formyhm.hideroot","me.phh.superuser","eu.chainfire.supersu.pro","com.kingouser.com","com.topjohnwu.magisk"],a=["su","busybox","supersu","Superuser.apk","KingoUser.apk","SuperSu.apk","magisk"],o={"ro.build.selinux":"1","ro.debuggable":"0","service.adb.root":"0","ro.secure":"1"},n=[];for(var t in o)n.push(t);var s=Java.use("android.app.ApplicationPackageManager"),i=Java.use("java.lang.Runtime"),r=Java.use("java.io.File"),l=Java.use("java.lang.String"),c=Java.use("android.os.SystemProperties"),u=Java.use("java.io.BufferedReader"),d=Java.use("java.lang.ProcessBuilder"),m=(Java.use("java.lang.StringBuffer"),Java.enumerateLoadedClassesSync());console.log("Loaded "+m.length+" classes!");console.log("loaded: "+m.indexOf("java.lang.ProcessManager")),-1!=m.indexOf("java.lang.ProcessManager")||console.log("ProcessManager hook not loaded");-1!=m.indexOf("android.security.keystore.KeyInfo")||console.log("KeyInfo hook not loaded"),s.getPackageInfo.overload("java.lang.String","int").implementation=function(a,o){return e.indexOf(a)>-1&&(console.log("Bypass root check for package: "+a),a="set.package.name.to.a.fake.one.so.we.can.bypass.it"),this.getPackageInfo.overload("java.lang.String","int").call(this,a,o)},r.exists.implementation=function(){var e=r.getName.call(this);return a.indexOf(e)>-1?(console.log("Bypass return value for binary: "+e),!1):this.exists.call(this)};var p=i.exec.overload("[Ljava.lang.String;"),g=i.exec.overload("java.lang.String"),h=i.exec.overload("java.lang.String","[Ljava.lang.String;"),f=i.exec.overload("[Ljava.lang.String;","[Ljava.lang.String;"),v=i.exec.overload("[Ljava.lang.String;","[Ljava.lang.String;","java.io.File"),x=i.exec.overload("java.lang.String","[Ljava.lang.String;","java.io.File");x.implementation=function(e,a,o){if(-1!=e.indexOf("getprop")||"mount"==e||-1!=e.indexOf("build.prop")||"id"==e||"sh"==e){var n="grep";return console.log("Bypass "+e+" command"),g.call(this,n)}if("su"==e){n="justafakecommandthatcannotexistsusingthisshouldthowanexceptionwheneversuiscalled";return console.log("Bypass "+e+" command"),g.call(this,n)}return x.call(this,e,a,o)},v.implementation=function(e,a,o){for(var n=0;n<e.length;n+=1){var t=e[n];if(-1!=t.indexOf("getprop")||"mount"==t||-1!=t.indexOf("build.prop")||"id"==t||"sh"==t){var s="grep";return console.log("Bypass "+e+" command"),g.call(this,s)}if("su"==t){s="justafakecommandthatcannotexistsusingthisshouldthowanexceptionwheneversuiscalled";return console.log("Bypass "+e+" command"),g.call(this,s)}}return v.call(this,e,a,o)},f.implementation=function(e,a){for(var o=0;o<e.length;o+=1){var n=e[o];if(-1!=n.indexOf("getprop")||"mount"==n||-1!=n.indexOf("build.prop")||"id"==n||"sh"==n){var t="grep";return console.log("Bypass "+e+" command"),g.call(this,t)}if("su"==n){t="justafakecommandthatcannotexistsusingthisshouldthowanexceptionwheneversuiscalled";return console.log("Bypass "+e+" command"),g.call(this,t)}}return f.call(this,e,a)},h.implementation=function(e,a){if(-1!=e.indexOf("getprop")||"mount"==e||-1!=e.indexOf("build.prop")||"id"==e||"sh"==e){var o="grep";return console.log("Bypass "+e+" command"),g.call(this,o)}if("su"==e){o="justafakecommandthatcannotexistsusingthisshouldthowanexceptionwheneversuiscalled";return console.log("Bypass "+e+" command"),g.call(this,o)}return h.call(this,e,a)},p.implementation=function(e){for(var a=0;a<e.length;a+=1){var o=e[a];if(-1!=o.indexOf("getprop")||"mount"==o||-1!=o.indexOf("build.prop")||"id"==o||"sh"==o){var n="grep";return console.log("Bypass "+e+" command"),g.call(this,n)}if("su"==o){n="justafakecommandthatcannotexistsusingthisshouldthowanexceptionwheneversuiscalled";return console.log("Bypass "+e+" command"),g.call(this,n)}}return p.call(this,e)},g.implementation=function(e){if(-1!=e.indexOf("getprop")||"mount"==e||-1!=e.indexOf("build.prop")||"id"==e||"sh"==e){var a="grep";return console.log("Bypass "+e+" command"),g.call(this,a)}if("su"==e){a="justafakecommandthatcannotexistsusingthisshouldthowanexceptionwheneversuiscalled";return console.log("Bypass "+e+" command"),g.call(this,a)}return g.call(this,e)},l.contains.implementation=function(e){return"test-keys"==e?(console.log("Bypass test-keys check"),!1):this.contains.call(this,e)},c.get.overload("java.lang.String").implementation=function(e){return-1!=n.indexOf(e)?(console.log("Bypass "+e),o[e]):this.get.call(this,e)},Interceptor.attach(Module.findExportByName("libc.so","fopen"),{onEnter:function(e){var o=Memory.readCString(e[0]),n=(o=o.split("/"))[o.length-1];a.indexOf(n)>-1&&(Memory.writeUtf8String(e[0],"/notexists"),console.log("Bypass native fopen"))},onLeave:function(e){}}),Interceptor.attach(Module.findExportByName("libc.so","system"),{onEnter:function(e){var a=Memory.readCString(e[0]);console.log("SYSTEM CMD: "+a),-1==a.indexOf("getprop")&&"mount"!=a&&-1==a.indexOf("build.prop")&&"id"!=a||(console.log("Bypass native system: "+a),Memory.writeUtf8String(e[0],"grep")),"su"==a&&(console.log("Bypass native system: "+a),Memory.writeUtf8String(e[0],"justafakecommandthatcannotexistsusingthisshouldthowanexceptionwheneversuiscalled"))},onLeave:function(e){}}),u.readLine.overload("boolean").implementation=function(){var e=this.readLine.overload("boolean").call(this);null===e||e.indexOf("ro.build.tags=test-keys")>-1&&(console.log("Bypass build.prop file read"),e=e.replace("ro.build.tags=test-keys","ro.build.tags=release-keys"));return e};d.command.overload("java.util.List");d.start.implementation=function(){for(var e=this.command.call(this),a=!1,o=0;o<e.size();o+=1){var n=e.get(o).toString();-1==n.indexOf("getprop")&&-1==n.indexOf("mount")&&-1==n.indexOf("build.prop")&&-1==n.indexOf("id")||(a=!0)}return a?(console.log("Bypass ProcessBuilder "+e),this.command.call(this,["grep"]),this.start.call(this)):-1!=e.indexOf("su")?(console.log("Bypass ProcessBuilder "+e),this.command.call(this,["justafakecommandthatcannotexistsusingthisshouldthowanexceptionwheneversuiscalled"]),this.start.call(this)):this.start.call(this)}}))}